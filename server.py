import datetime
import random
import smtplib
import pandas
from flask import Flask, render_template, redirect, url_for, flash, request, abort
from flask_bootstrap import Bootstrap
from flask_ckeditor import CKEditor
from werkzeug.security import generate_password_hash, check_password_hash
from flask_sqlalchemy import SQLAlchemy
from flask_login import UserMixin, login_user, LoginManager, login_required, current_user, logout_user
from flask_wtf import FlaskForm
from sqlalchemy.orm import relationship
from wtforms import StringField, SubmitField, PasswordField
from wtforms.fields.html5 import EmailField
from wtforms.validators import DataRequired
from functools import wraps
import os
import json

app = Flask(__name__)
app.config['SECRET_KEY'] = os.environ.get("SECRET_KEY")
ckeditor = CKEditor(app)
Bootstrap(app)

app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get("DATABASE_URL", "sqlite:///sena-base.db")
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

admin = False
login_manager = LoginManager()
login_manager.init_app(app)

MY_EMAIL = os.environ.get("MY_EMAIL")
SENA_EMAIL = 'sivagangainagarajan@gmail.com'
MY_PASSWORD = os.environ.get("MY_PASSWORD")


@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))


def admin_only(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        # If id is not 1 then return abort with 403 error
        if current_user.user_id != 1:
            return abort(403)
        # Otherwise continue with the route function
        return f(*args, **kwargs)

    return decorated_function


class User(UserMixin, db.Model):
    __tablename__ = "User"
    user_id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(100), unique=True)
    password = db.Column(db.String(100))
    username = db.Column(db.String(100))
    # test = relationship("Test15", back_populates="test_author")
    # test16 = relationship("Test16", back_populates="test_author")
    # test17 = relationship("Test17", back_populates="test_author")
    # test18 = relationship("Test18", back_populates="test_author")
    # test19 = relationship("Test19", back_populates="test_author")
    test20 = relationship("Test20", back_populates="test_author")
    test21 = relationship("Test21", back_populates="test_author")
    test22 = relationship("Test22", back_populates="test_author")
    test23 = relationship("Test23", back_populates="test_author")
    test24 = relationship("Test24", back_populates="test_author")

    def get_id(self):
        return self.user_id


# class Test15(db.Model):
#     __tablename__ = "Test_15"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test")
#     marks = db.Column(db.Integer)
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test16(db.Model):
#     __tablename__ = "Test_16"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test16")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test17(db.Model):
#     __tablename__ = "Test_17"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test17")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test18(db.Model):
#     __tablename__ = "Test_18"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test18")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test19(db.Model):
#     __tablename__ = "Test_19"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test19")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test20(db.Model):
#     __tablename__ = "Test_20"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test20")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


class Test21(db.Model):
    __tablename__ = "Test_21"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test21")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test22(db.Model):
    __tablename__ = "Test_22"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test22")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test23(db.Model):
    __tablename__ = "Test_23"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test23")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test24(db.Model):
    __tablename__ = "Test_24"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test24")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Admission(db.Model):
    __tablename__ = "New_Admission"
    user_id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100))
    mobile_number = db.Column(db.Integer)
    email = db.Column(db.String(100), unique=True)


db.create_all()
db.session.commit()


class RegisterForm(FlaskForm):
    name = StringField('Name*', validators=[DataRequired()])
    email = EmailField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    password = PasswordField('Password*', validators=[DataRequired()])
    submit = SubmitField('Register')


class LoginForm(FlaskForm):
    email = StringField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    password = PasswordField('Password*', validators=[DataRequired()])
    submit = SubmitField('Login')


class AdmissionForm(FlaskForm):
    name = StringField('Name*', validators=[DataRequired()])
    number = StringField("Phone*", validators=[DataRequired()])
    email = EmailField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    submit = SubmitField('Submit')


class ChangeDetails(FlaskForm):
    email = StringField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    old_password = PasswordField('Old Password*', validators=[DataRequired()])
    new_password = PasswordField('New Password*', validators=[DataRequired()])
    submit = SubmitField('Submit')


student_mails = {
    "mgopalakrish''075@gmail.com": ["Gopal", 2000],
    "nivir6558@gmail.com": ["Nivetha", 7000],
    "jaya26jj@gmail.com": ["Christy", 5000],
    "srjamuna1003@gmail.com": ["jamuna", 7000],
    "satheshpandian1997@gmail.com": ["Satheshpandian", 4000],
    "lakshmiraja412@gmail.com": ["Rajalaskhmi", 5000],
    "tamilarasanbe9597@gmail.com": ["Anitha", 1000],
    "rajeshkan''6341@gmail.com": ["Rajesh kan''", 3000],
    "jaishreeramgp@gmail.com": ["Yogapriya", 3000],
    "irudhayasubiksha2001@gmail.com": ["Subiksha", 0],
    "abinayaabi257@gmail.com": ["Abi", 1000],
    "shanthirasu1991@gmail.com": ["Shanthi", 0],
    "pradee1296@gmail.com": ["Pradeepa", 5000],
    "jeniferj0204@gmail.com": ["Janifer", 7000],
    "krish47457@gmail.com": ["Krishna", 0],
    "naveenaryan440@gmail.com": ["Naveen", 0],
    "veerasurya250899@gmail.com": ["Suriya", 3000],
    "amin2svg@gmail.com": ["Amin", 3000],
    "jjprincy06@gmail.com": ["Jeba Josepin Princy", 0],
    "jancybetsia20@gmail.com": ["Jancy", 0],
    "cottonpanju9@gmail.com": ["Panju", 2000],
    "rameswariv1999@gmail.com": ["Rameshwari", 2000],
    "vimaladharmar2002@gmail.com": ["Vimala", 1000],
    "devahi1993@gmail.com": ["Devahi", 0],
    "sarojiniganesan96@gmail.com": ["Sarojini", 0],
    "gangadha91@gmail.com": ["Gangadharan", 0],
    "krish''nk498@gmail.com": ["Kamatchi", 0],
    "indhuindhumathi141@gmail.com": ["Indhumathi", 4000],
    "jamespurysh@gmail.com": ["Purushothaman", 0],
    "sivagangainagarajan@gmail.com": ["Nagarajan", 0],
    "matheshsethu22@gmail.com": ["Mathesh", 4000],
    "nagarajnkarthika@gmail.com": ["Karthika", 2000],
    "keviraj482@gmail.com": ["Yogesh", 2000],
    "christyjeslina98@gmail.com": ["Christy", 3500],
    "valarmathi9415@gmail.com": ["Valarmathi", 2000],
    "mohanpothumponnuk2001@gmail.com": ["Mohan", 7000],
    "sobanasobana377@gmail.com": ["Sobana", 7000],
    "ashiqanash@gmail.com": ["Ashiq", 0]
}

verified_emails = [mail.strip() for mail in student_mails.keys()]

exam_sites = {

    "15": ["June 14, 2021 10:00:00", "June 14, 2021 13:30:00"],
    "16": ["June 21, 2021 10:00:00", "June 21, 2021 13:30:00"],
    "17": ["June 28, 2021 10:00:00", "June 28, 2021 22:30:00"],
    "18": ["July 05, 2021 10:00:00", "July 05, 2021 13:30:00"],
    "19": ["July 12, 2021 10:00:00", "July 12, 2021 13:30:00"],
    "20": ["July 19, 2021 10:00:00", "July 19, 2021 14:00:00"],
    "21": ["July 26, 2021 10:00:00", "July 26, 2021 14:00:00"],
    "22": ["August 02, 2021 13:00:00", "August 02, 2021 19:00:00"],
    "23": ["August 09, 2021 10:00:00", "August 09, 2021 14:00:00"],
    "24": ["August 16, 2021 10:00:00", "August 16, 2021 14:00:00"],

}

sl_no = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
         31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
         59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
         112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
         134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]

ques = ['ஜெயலலிதாவின் இயற்ஜெயர் என்ன ?', 'மாணவ நேசன் என்ற கையெழுத்துப் பிரதி பத்திரிக்கையை தொடங்கி நடத்தியவர்\n',
        'மத்திய மாநில உறவுகளை ஆய்வு செய்வதற்கு நியமிக்கப்பட்ட குழு', 'கருணாநிதி மகளிர் காவல் பிரிவை எந்த வருடம் தொடங்கினார்?', 'மூன்றாவது உலகத் தமிழ் மாநாடு யாருடைய ஆட்சியில் நடைபெற்றது?', '“நான் ஏன் பிறந்தேன்” யாருடைய சுயசரிதை நூல்?', '“நெஞ்சுக்கு நீதி” யாருடைய சுயசரிதை நூல்?', 'ஜெயலலிதாவின் முதல் கட்சிப் பணி', 'காங்கிரஸ் அல்லாத முதல் திராவிட ஆட்சி அமையப்பெற்ற வருடம்', 'சுதந்திரத்திற்கு பின் முதன் முதலில் மொழிவாரியாக பிரிக்கப்பட்ட மாநிலமாக ஆந்திரா உருவான வருடம்', 'மாநில மறுசீரமைப்பு சட்டம்', 'அண்ணாவின் தலைமையில் திமுக முதன்முதலில் தேர்தலை சந்தித்தது எந்த வருடம்?', 'எந்த ஆண்டில் சென்னை மாகாணம் தமிழ்நாடு என பெயர் மாற்றம் செய்யப்பட்டது?', "தமிழகத்தில் ‘Modified elementary education scheme' என்ற திட்டத்தை நிறைவேற்றியவர்", 'கூற்று : 1957 பொதுத்தேர்தலில் குளித்தலையில் வெற்றி பெற்று தமிழக சட்டமன்றத்தில் உறுப்பினராக கருணாநிதி நுழைந்தார்\nகாரணம் : கருணாநிதி தமிழக முதலமைச்சரானார்\n', 'பெரும் கலவரமும் பொருட்சேதமும் கூடிய மூன்றாவது இந்தி எதிர்ப்பு போராட்டங்கள் எந்த வருடம் நடந்தேறியது?', 'எம் ஜி ராமச்சந்திரன் தலைமையில் திராவிட கட்சி ஒன்று அமையப்பெற்றது அதன் தொடக்க வருடம் என்ன?', '“ சட்டமும் விதிமுறைகளும் மக்களுக்காகவே ஏற்பட்டவை சட்டத்துக்காகவும் விதிமுறைகளுக்காகவும் மக்கள் இல்லை “ என கூறியவர்', 'உச்ச நீதிமன்றம் உயர் கல்வியில் சாதிவாரி இட ஒதுக்கீட்டை நீக்கிய வருடம்?', 'யாருடைய ஆட்சியில் இரண்டாவது உலகத் தமிழ் மாநாடு நடைபெற்றது?', 'ரூபாய்க்கு மூன்று படி அரிசி லட்சியம் ஒரு படி அரிசி நிச்சயம் என்ற தேர்தல் வாக்குறுதியை நிறைவேற்றும் வண்ணம் எந்தெந்தப் பகுதிகளில் ரூபாய்க்கு ஒரு படி அரிசி அண்ணாதுரையின் ஆட்சியில் வழங்கப்பட்டது?', '“ திராவிடநாடு “ கோரிக்கையை அண்ணா கைவிட காரணமாக இருந்த வரலாற்று நிகழ்வு', 'யாருடைய ஆட்சியில் 75 மைல் தொலைவிற்கு மேல் உள்ள பேருந்து தடங்கள் தேசியமயமாக்கப்பட்டது?', "Pre university course' எனப்படும பல்கலைக்கழகத்திற்கு முந்தைய கல்வி மற்றும் தொழிற்கல்விக்கு முந்தைய படிப்புகளுக்கு கல்விக் கட்டண விதிவிலக்கு அளித்தது யார்?", 'மதிய உணவு திட்டத்தை காமராஜர் எந்த வருடம் அறிமுகப்படுத்தினார்?', 'குலக்கல்வித் திட்டத்தை நீக்கியதற்கு நன்றி செலுத்தும் விதமாக அண்ணா காமராஜருக்கு எதிராக எந்த தொகுதியில் வேட்பாளர்களை அறிவிக்கவில்லை?', 'மாணவ நேசன் என்ற பத்திரிக்கையை எந்த வருடம் முரசொலி ஆனது?', '1970 ல் நில உச்சவரம்பு சட்டதிட்டத்தில் 30 ஏக்கராக இருந்ததை எத்தனை ஏக்கர்களாக கருணாநிதி குறைத்தார்?', 'இந்தியாவிலேயே முதல்முறையாக மாநிலத் திட்டக்குழு கருணாநிதியின் ஆட்சியில் அமைக்கப்பட்ட வருடம்', '1970 வது வருடம் மக்களின் வாழ்விட கட்டமைப்பை மேம்படுத்துவதற்காக உருவாக்கப்பட்ட வாரியம் என்ன?', 'ராஜாஜி அமல்படுத்திய மதுவிலக்கை பின்னர் கருணாநிதி எந்த வருடம் ரத்து செய்தார்?', 'முதலமைச்சர் சத்துணவுத் திட்டம் எந்த மாவட்டத்தில் தொடங்கப்பட்டது', 'தொட்டில் குழந்தை திட்டம் எந்த மாவட்டத்தில் தொடங்கப்பட்டது', 'யாருடைய ஆட்சியில் 1993ஆம் ஆண்டு மாநில மகளிர் ஆணையம் தொடங்கப்பட்டது', 'கருணாநிதியால் சமத்துவபுரம் திட்டம் எந்த மாவட்டத்தில் தொடங்கப்பட்டது', 'பெண்களுக்கான சிறப்பு பேருந்து இயக்கத்தை தொடங்கி வைத்தவர்', 'முதலமைச்சர் சத்துணவுத் திட்டம் தொடங்கப்பட்ட வருடம்', 'தமிழகத்தில் சட்ட மேலவை நீக்கம் பெற்றது எந்த வருடம்', 'லட்சுமணசாமி முதலியார் குழுவின் பரிந்துரையின் பேரில் புதிய கல்வி முறையை எம்ஜிஆரின் அரசு எந்த வருடம் அறிமுகப்படுத்தியது?', 'அண்ணா திராவிட முன்னேற்றக் கழகம் தொடங்கப்பட்ட வருடம்', '1979 இல் இட ஒதுக்கீட்டில் 33 சதவீதத்தில் இருந்து 50 சதவீதமாக யாருடைய அரசு உயர்த்தியது?', 'பகுதி நேர கிராம நிர்வாக அலுவலர்கள் பதவி எந்த குழுவின் பரிந்துரையின் மூலம் ஒழிக்கப்பட்டது?', 'எம்ஜிஆரின் ஆட்சியில் அனைத்து சாதியினரும் அர்ச்சகராகலாம் என்ற திட்டத்தின் கீழ் அமைக்கப்பட்ட குழு', 'தமிழகத்தின் முதல் பெண் முதலமைச்சர்', '69 சதவீத இட ஒதுக்கீட்டிற்காக தமிழக சட்டப்பேரவையில் தீர்மானம் நிறைவேற்றப்பட்ட வருடம்', '69 சதவீத இட ஒதுக்கீட்டை சட்டத்திற்கு அனுமதி அளித்த குடியரசு தலைவர்', 'மழை நீர் சேகரிப்புத் திட்டம் எந்த வருடம் அறிமுகப்படுத்தப்பட்டது', 'இந்தியாவிலேயே முதல்முறையாக காவல் படையில் எந்த பிரிவை இணைத்து ஜெயலலிதா அரசு அறிமுகப்படுத்தியது?', 'ஜெயலலிதாவால் தமிழ்நாடு சிறப்பு பொருளாதார மண்டலம் சட்டம் இயற்றப்பட்ட வருடம்', 'எந்த சட்டத் திருத்தத்தின் மூலமாக 69 சதவீத இட ஒதுக்கீடு ஒன்பதாவது அட்டவணையில் நிறுவப்பட்டது?', '69 சதவீத இட ஒதுக்கீடு எந்த வருடம் நீதிமன்ற தீர்ப்பிலிருந்து பாதுகாக்கப்பட்டு உறுதிப்படுத்தப்பட்டது?', '2010 முத்துக்குமரன் குழுவின் பரிந்துரையின் பெயரில் புதிய கல்வி திட்டத்தை கருணாநிதி அரசு அறிமுகப்படுத்தியது அதன் பெயர் என்ன?', 'உலகத் தமிழ்ச் செம்மொழி மாநாடு நடைபெற்ற இடம்', 'மதிப்பு கூட்டு வரி அறிமுகம் செய்யப்பட்ட ஆண்டு', '2008ல் மூன்றாம் பாலின நல வாரியம் யாரால் அமைக்கப்பட்டது?', '2004 ஆம் ஆண்டு இந்தியாவில் முதல் முறையாக செம்மொழி அந்தஸ்து பெற்ற மொழி எது', 'சென்னை கோட்டூர்புரத்தில் யாருடைய நூற்றாண்டு விழா நினைவாக அனைத்து வசதிகளுடன் கூடிய நூலகம் அமைக்கப்பட்டது?', 'எந்த வருடம் மருத்துவம் மற்றும் பொறியியல் படிப்புகளுக்கு நுழைவுத் தேர்வு ரத்து செய்யப்பட்டது', 'எந்த குழுவின் பரிந்துரையின் பேரில் நுழைவுத் தேர்வு ரத்து செய்யப்பட்டது', '2006 கருணாநிதியின் ஆட்சியில் ஏகே ராஜன் குழு எது சம்பந்தமாக பரிந்துரைக்கும் வகையில் அமைக்கப்பட்டது', 'இந்தியாவில் முதல் முறையாக மாநில ரீதியான திட்டக்குழு கருணாநிதியின் ஆட்சியில் தமிழகத்தில் அமைக்கப்பட்டது எந்த வருடம்?', '1971 பிச்சைக்காரர் மறுவாழ்வுத் திட்டத்தை அறிமுகப்படுத்திய தமிழக முதல்வர் யார்', 'தேவதாசி ஒழிப்புச் சட்டம் முழுமையாக எந்த வருடம் நிறைவேற்றப்பட்டது?', 'மாநில சுயாட்சித் தீர்மானம் நிறைவேற்றப்பட்ட வருடம்- state autonomy resolution', 'முதலாவது சட்ட பல்கலை கழகம் 1997 ல் யாருடைய பெயரில் தொடங்கப்பட்டது?', 'உழவர் சந்தை திட்டம்', 'கருணாநிதியின் ஆட்சியில் டைடல் பூங்கா எந்த வருடம் அமைக்கப்பட்டது?', 'அண்ணாவைப் போலவே கருணாநிதியும் மெட்ராஸ் என்ற நகரத்தின் பெயரை சென்னை என மாற்றம் செய்தார் எந்த வருடம் இந்நிகழ்வு நடைபெற்றது?', 'காமராஜர் பிறந்த நாளை எந்த தினமாக கொண்டாட கருணாநிதியின் அரசு ஆணையிட்டது?', 'அனைத்து மகளிர் காவல் நிலையம் முதல் முதலில் எந்த பகுதியில் தொடங்கப்பட்டது', 'கருணாநிதியால் கிராம மின்மயமாக்கல் திட்டம் அறிமுகப்படுத்தப்பட்ட வருடம்', '1990 ஆம் வருடம் விவசாயிகளுக்கு இலவச மின்சாரம் வழங்கும் திட்டத்தை யாருடைய அரசு அறிமுகப்படுத்தியது?', 'டாக்டர் முத்துலட்சுமி ரெட்டி எந்த ஆண்டு புதுக்கோட்டையில் பிறந்தார்?\n', 'முத்துலட்சுமி ரெட்டியின் தங்கை புற்றுநோயால் பாதிக்கப்பட்டு இறந்த ஆண்டு?\n', 'முத்துலட்சுமி ரெட்டி எந்த ஆண்டு புற்று நோய் நிவாரண மருத்துவமனையை அடிக்கல் நாட்டப்பட்டது?\n', 'முத்துலட்சுமி ரெட்டி சென்னை மருத்துவக் கல்லூரியில் டாக்டர் பட்டம் பெற்ற ஆண்டு?\n', 'இந்தியாவின் முதல் பெண் மருத்துவர்?\n', ' டாக்டர் முத்துலட்சுமி ரெட்டி சட்டமன்ற மேலவை உறுப்பினராக நியமனம் செய்யப்பட்ட ஆண்டு?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி கல்லூரியில் சேர அனுமதி அளித்த புதுக்கோட்டை மன்னர் யார்?\n', ' முதல் சட்டமன்ற மேலவை துணைத் தலைவர்?\n', 'தேவதாசி ஒழிப்பு முறை மசோதா கொண்டுவரப்பட்ட ஆண்டு?\n', 'தேவதாசி ஒழிப்பு முறை சட்டம் நிறைவேற்றப்பட்ட ஆண்டு?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி எந்த ஆண்டு பாரிஸில் நடைபெற்ற உலக பெண்கள் மாநாட்டில் கலந்து கொண்டார்?\n', ' முத்துலட்சுமி ரெட்டி பற்றி சரியானதை தேர்ந்தெடுக?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி யார் எந்த ஆண்டு அவ்வை இல்லம் தொடங்கப்பட்டது?\n\n', 'முத்துலட்சுமி ரெட்டி பூனாவில் எந்த ஆண்டு அனைத்திந்திய பெண்கள் மாநாட்டை நடத்தினார்?\n\n', '1933 முதல் 1945 வரை இடையில் இரு வருடங்கள் தவிர தொடர்ந்து இந்திய மாதர் சங்க தலைவியாக இருந்தவர் யார்?\n\n', 'மாநில சமூக நல ஆலோசனை வாரியத்தின் தலைவராக டாக்டர் முத்துலட்சுமி ரெட்டி நியமனம் செய்யப்பட்ட ஆண்டு?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டிக்கு பத்மபூஷன் விருது வழங்கப்பட்ட ஆண்டு?\n\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி எந்த ஆண்டு தனது 82 ஆவது வயதில் மறைந்தார்?\n', " மாதர் இந்திய சங்கம் நடத்திய பெண்களுக்கான 'ஸ்த்ரீ தர்மம்' என்னும் மாத இதழின் ஆசிரியராக விளங்கியவர்?\n\n", ' கலப்பு திருமண உதவித்தொகை யாருடைய பெயரால் வழங்கப்படுகிறது?\n', 'டாக்டர் எஸ் தர்மாம்பாள் பிறந்த ஆண்டு?\n', ' சித்த மருத்துவம் பயின்று சென்னையில் மருத்துவமனை ஒன்றைத் தொடங்கியவர்?\n\n', 'தந்தை பெரியாரின் கருத்துக்களால் ஈர்க்கப்பட்ட விதவைகள் மறுமணம் ,கலப்பு மணம் ,பெண்கல்வி போன்றவற்றில் ஆர்வம் காட்டியவர்?\n', 'தமிழ் இலக்கிய வளர்ச்சியிலும், தமிழிசை வளர்ப்பதிலும் அதிகம் ஆர்வம் கொண்டிருந்தவர்?\n\n', " டாக்டர் தர்மாம்பாள் எந்த ஆண்டு தமிழ் ஆசிரியர்களுக்கு ஊதியம் உயர்த்தப்பட வேண்டிய 'இழவு வாரம்' என்ற போராட்டத்தை தொடங்கினார்?\n", 'தமிழ் ஆசிரியர்களுக்கு ஊதியத்தை உயர்த்தி வழங்க உத்தரவிட்ட அமைச்சர்?\n\n', 'சென்னை மாணவர் மன்றம் என்ற அமைப்பை உருவாக்கியவர்?\n', "தமிழ் மொழி மற்றும் தமிழ் இலக்கியத்திற்கு ஆற்றிய சேவைகளைப் பாராட்டி 'வீரத்தமிழன்னை' என்ற பட்டம் பட்டம் பெற்றவர்?\n\n", "ஈவே ராமசாமி நாயக்கருக்கு 'பெரியார்' என்ற பட்டத்தையும் தியாகராஜ பாகவதருக்கு 'ஏழிசை மன்னர்' என்ற பட்டத்தையும் வழங்கியவர்கள்?\n", 'டாக்டர் தர்மாம்பாள் அறுபத்தி ஒன்பதாவது வயதில் எந்த ஆண்டு காலமானார்?\n', 'மூவலூர் இராமாமிர்தம் அம்மையார் பிறந்த ஆண்டு?\n\n', 'இசை வேளாளர் குலத்தைச் சேர்ந்த பெண்கள் ------மற்றும்----- அர்ப்பணிக்கப்பட்டனர்?\n\n', 'எந்த ஆண்டு மயிலாடுதுறையில் இசை வேளாளர் மாநாட்டை மூவலூர் ராமாமிர்தம் அம்மையார் கூட்டினார்?\n', 'இசை வேளாளர் மாநாட்டில் கலந்து கொண்டவர்கள்?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி தேவதாசி முறை ஒழிப்பு சட்டம் கொண்டுவர முக்கிய ஆணிவேராக அமைந்தவர்?\n\n', '1936 இல் வெளியான சுயசரிதை புதினமான தாசிகளின் மோசவலை அல்லது மதிபெற்ற மைனர், தாசிகளின் அவல நிலையை வெளிச்சத்துக்குக் கொண்டு வந்தது?\n\n', 'மூவலூர் ராமாமிர்தம் அம்மையார் மறைந்த ஆண்டு?\n', 'மூவலூர் ராமாமிர்தம் அம்மையார் நினைவு திருமண உதவித் திட்டம் தொடங்கப்பட்ட ஆண்டு?\n', 'டாக்டர் தர்மாம்பாள் அம்மையார் நினைவு விதவை மறுமண உதவித் திட்டம்?\n', 'டாக்டர் முத்துலட்சுமி ரெட்டி நினைவு கலப்பு திருமண உதவித் திட்டம்?\n', 'ஈ வே ரா மணியம்மையார் நினைவு ஏழை விதவையர் மகள் திருமண உதவி திட்டம்?\n', 'அன்னை தெரசா நினைவு ஆதரவற்ற பெண்கள் திருமண உதவித் திட்டம்?\n', 'பெரியார் பிறந்த ஆண்டு?\n', 'பெரியார் எங்கு சென்று இருந்தபோது பார்ப்பனர்கள் மற்ற இனத்தவர்களை இழிவுபடுத்துவதை நேரடியாக கண்டு அதனை கடுமையாக கண்டித்தார்?\n\n', 'பெரியார் தமது கொள்கைகளைப் பரப்புவதற்காக காங்கிரஸில் இணைந்த ஆண்டு?\n', 'பெரியார் தமது கொள்கைகளைப் பரப்புவதற்காக காங்கிரஸில் இணைந்த ஆண்டு?\n', 'பெரியார் சென்னை மாநில காங்கிரஸ் கமிட்டியின் தலைவரான ஆண்டு?\n', 'எந்த ஆண்டு கேரளாவில் உள்ள வைக்கத்தில் நடைபெற்ற சத்தியாக்கிரகப் போராட்டத்தில் பெரியார் பங்கேற்று ஆலய நுழைவு தடை சட்டத்தை எதிர்த்துப் போராடினார்?\n', 'எந்த அரசு ஆலய நுழைவு தடை சட்டத்தை தளர்த்தி அனைவரும் ஆலயத்திற்குள் நுழையலாம் என அறிவித்தது?\n', 'பெரியார் பற்றிய சரியான தேர்ந்தெடு\n', 'பெரியார் எங்கு நடைபெற்ற காங்கிரஸ் மாநாட்டில் பார்ப்பனரல்லாத அவர்களுக்கு அரசுப் பணியில் இட ஒதுக்கீடு வழங்கும் தீர்மானத்தைக் கொண்டு வந்தார்?\n', 'பெரியார் காஞ்சிபுரம் மாநாட்டில் இருந்து வெளியேறி எந்த ஆண்டு சுயமரியாதை இயக்கத்தை தோற்றுவித்தவர்?\n', 'சுயமரியாதைக் கொள்கைகளை பெரியார் எந்தெந்த பத்திரிக்கைகள் மூலம் பரப்பினர்?\n', 'சுயமரியாதை இயக்கத்தின் நோக்கங்கள்?\n', 'பெரியார் ஈரோட்டு நகரசபைத் தலைவராக பதவி வகித்த ஆண்டு?', ' வைக்கம் போராட்டத்தில் தொடக்க கட்டங்களில் மதுரையில் சேர்ந்த யார் பெரும் பங்கு வகித்தார்?\n', 'தமிழ்நாடு காங்கிரஸ் கமிட்டியின் நிதியுதவியை சேரன்மாதேவி குருகுலப் பள்ளியில் நடத்தியவர் யார்?\n', ' காஞ்சிபுரத்தில் காங்கிரஸ் மாநாடு நடைபெற்ற ஆண்டு?\n', ' மதுவிலக்கு இயக்கத்திற்கு ஆதரவாக பெரியார் தனது தோப்பில் இருந்து எத்தனை தென்னை மரங்களை வெட்டினார்?\n', 'பெரியார் காங்கிரசை விட்டு வெளியேறிய ஆண்டு?\n', 'சுயமரியாதை இயக்கத்தின் அதிகாரப்பூர்வ செய்தித்தாள்?\n', 'சித்திரப் புத்திரன் புனைப்பெயரில் கட்டுரைகளை எழுதியவர்?\n', 'பெரியார் பர்மாவில் எந்த ஆண்டு நடைபெற்ற புத்திரன் 2500 ஆவது பிறந்த நாள் விழாவில் கலந்துகொள்ள சென்றார்?\n', 'பதினாலாவது அம்ச சோசியலிச அறிக்கை வெளியிட்டவர்?\n', 'அம்பேத்கர் எழுதிய சாதி ஒழிப்பு எனும் நூலை பெரியார் தமிழில் பதிப்பித்த ஆண்டு?\n', 'சிறையில் இருந்தபோது நீதிக் கட்சியின் தலைவராக தேர்ந்தெடுக்கப்பட்டார்?\n', 'இந்தி எதிர்ப்புப் போராட்டங்கள் நடைபெற்ற ஆண்டு?\n', 'சரியானதை தேர்ந்தெடு\n', 'குலக்கல்வித் திட்டம் சாதியை அடிப்படையாகக் கொண்ட கல்வி என எதிர்த்தவர்?\n', 'சமயம் என்றால் நீங்கள் மூடநம்பிக்கைகளை ஏற்றுக் கொள்கிறீர்கள் என்று பொருள் என உறுதிபட கூறியவர்?\n', 'பெண் ஏன் அடிமையானாள் என்ற நூலை எழுதியவர்?\n', '1944 ஆம் ஆண்டு நடைபெற்ற -----மாநாட்டில் நீதிக்கட்சி திராவிடர் கழகம் என பெயர் மாற்றம் செய்யப்பட்டது?\n', ' ஈ  வே ராமசாமிக்கு பெரியார் பட்டம் வழங்கப்பட்ட ஆண்டு?\n', 'பெரியார் மறைந்த ஆண்டு?\n', 'சுயமரியாதை இயக்கத்தின் முதல் மாநாடு நடைபெற்ற இடம்?\n', 'உலக கப்பல் போக்குவரத்துத் துறையில் அனைத்தும் பெண் அதிகாரிகளால் முழுவதும் ஒரு கப்பல் இயக்கப்படும்கப்பலின் பெயர்', 'இந்திய மல்யுத்த வீராங்கனையான___________அவர்கள் உக்ரைனின்கீவ் நகரில் நடத்தப்பட்ட உக்கிரன் மல்யுத்த போட்டியில்பெண்களுக்கான53கிலோ எடை பிரிவில்தங்கப்பதக்கம்வென்றுள்ளார்', 'டெசர்ட் பிளாக் பயிற்சியானது எத்தனை நாடுகள் பங்கேற்புடன் நடத்தப்படும் ஒரு பன்னாட்டு போர் பயிற்சியாகும்']

a = ['A) கோமனவள்ளி', 'A)\tஅண்ணா', 'A)\tலோகநாதன் குழு', 'A)\t1976', 'A)\tகருணாநிதி', 'A)\tகருணாநிதி', 'A)\tகருணாநிதி',
     'A)\tஎதிர்கட்சி தலைவர்', 'A)\t1969', 'A)\t1956', 'A)\t1956', 'A)\t1967', 'A)\t1969', 'A)\tராமசாமி', 'A)\tகூற்றும் காரணமும் சரியானது', 'A)\t1967', 'A)\t1977', 'A)\tகருணாநிதி', 'A)\t1950', 'A)\tஅண்ணாதுரை', 'A)\tகோவை', 'A)\tஇந்திய பாகிஸ்தான் யுத்தம்', 'A)\tஅண்ணாதுரை', 'A)\tஅண்ணாதுரை', 'A)\t1954', 'A)\tகுளித்தலை', 'A)\t1942', 'A)\t15', 'A)\t1970', 'A)\tசேரி ஒழிப்பு வாரியம்', 'A)\t1971', 'A)\tதிருச்சி', 'A)\tதிருச்சி', 'A)\tகருணாநிதி', 'A)\tமதுரை', 'A)\tகருணாநிதி', 'A)\t1980', 'A)\t1985', 'A)\t1978', 'A)\t1972', 'A)\tகருணாநிதி', 'A)\tராஜமன்னார் குழு', 'A)\tராஜமன்னார் குழு', 'A)\tஜானகி ராமச்சந்திரன்', 'A)\t1991', 'A)\tஅப்துல் கலாம்', 'A)\t2000', 'A)\tஆயுதப்படை', 'A)\t2001', 'A)\t76 வது சட்ட திருத்தம்', 'A)\t1993', 'A)\tசமச்சீர் கல்வி முறை', 'A)\t கோவை', 'A)\t2005', 'A)\tஜெயலலிதா', 'A)\tசமஸ்கிருதம்', 'A)\tகருணாநிதி', 'A)\t2006', 'A)\tமுத்துக்குமரன்', 'A)\tசமச்சீர் கல்வி', 'A)\t1970', 'A)\tகருணாநிதி', 'A)\t1967', 'A)\t1972', 'A)\tகருணாநிதி', 'A)\t1997', 'A)\t1997', 'A)\t1995', 'A)\tபாசன வசதி நாள்', 'A)\tமதுரை', 'A)\t1969', 'A)\tகருணாநிதி', 'A) 1886 ஜூலை 30', 'A)1949', 'A)1952', 'A)1907', 'A) முத்துலட்சுமி ரெட்டி', 'A)1931', 'A) இரண்டாம் சரபோஜி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A)1931', 'A)1931', 'A)1912', 'A) இந்திய பெண்கள் சங்கத்தின் முதல் தலைவர்', 'A)1912', 'A)1912', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A)1956', 'A)1956', 'A) 1956 ஜூலை 22', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) முத்துலட்சுமி ரெட்டி', 'A)1886', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A)1938', 'A) அவினாசிலிங்கம் செட்டியார்', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A)1890', 'A)1886', 'A)இறைப்பணி', 'A)1925', 'A) திருவிக', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'A) 1968 ஜூன் இருபத்தி ஏழு', 'A)1989', 'A) 1989', 'A) 1989', 'A) 1989', 'A) 1989', 'A) 1879 செப்டம்பர் 17', 'A) பத்ரிநாத்', 'A)1919', 'A)1919', 'A)1919', 'A)1919', 'A) சென்னை மாகாண அரசு', 'A) ஒத்துழையாமை இயக்கத்தில் பங்கேற்றார்', 'A) காஞ்சிபுரம்', 'A)1919', 'A) குடியரசு', 'A) மதம் ஜாதி அரசியல் மற்றும் சமுதாயத் தில் பார்ப்பனர்களின் ஆதிக்கத்தை கடுமையாக எதிர்த்தது', 'A)1917-1918', 'A) ரெட்டைமலை சீனிவாசன்', 'A) ரெட்டைமலை சீனிவாசன்', 'A)1919', 'A)500', 'A)1919', 'A) குடியரசு', 'A) திரு வி கல்யாண சுந்தரம்', 'A)1952', 'A) பெரியார்', 'A)1932', 'A) சுப்புராயலு', 'A)1936-1939', 'A) குடும்ப கட்டுப்பாடு திட்டத்தை அறிவுறுத்தினர்', 'A) பெரியார்', 'A) பெரியார்', 'A) பெரியார்', 'A) காஞ்சிபுரம்', 'A) 1938 நவம்பர் 13', 'A) 1937 செம்பரி 24', 'A) சேலம்', 'A) எம்டி ஸ்வர்ண கிருஷ்ணா', 'A) தினேஷ்போகாட்', 'A) 10']

b = ['B) கோமளவள்ளி', 'B)\tகருணாநிதி', 'B)\tசார்லஸ் குழு', 'B)\t1978', 'B)\tஅண்ணா', 'B)\tஅண்ணா', 'B)\tஅண்ணா',
     'B)\tஉயர்மட்ட குழு உறுப்பினர்', 'B)\t1978', 'B)\t1955', 'B)\t1955', 'B)\t1957', 'B)\t1975', 'B)\tராமசந்திரன்', 'B)\tகூற்று சரி காரணம் தவறு', 'B)\t1965', 'B)\t1972', 'B)\tகாந்தி', 'B)\t1951', 'B)\tகருணாநிதி', 'B)\tசென்னை', 'B)\tஇந்தியா சீனா யுத்தம்', 'B)\tகருணாநிதி', 'B)\tகருணாநிதி', 'B)\t1955', 'B)\tகுடியாத்தம்', 'B)\t1962', 'B)\t16', 'B)\t1971', 'B)\tகுடிசை ஒழிப்பு வாரியம்', 'B)\t1981', 'B)\tமதுரை', 'B)\tமதுரை', 'B)\tஅண்ணா', 'B)\tதிருச்சி', 'B)\tஅண்ணா', 'B)\t1981', 'B)\t1986', 'B)\t1987', 'B)\t1973', 'B)\tஅண்ணா', 'B)\tவர்கீஸ் மற்றும் ஆம்புரோஸ் குழு', 'B)\tமுத்துக்குமரன் குழு', 'B)\tஜெயலலிதா', 'B)\t1992', 'B)\tசங்கர் தயாள் சர்மா', 'B)\t2001', 'B)\tபெண்கள் பிரிவு', 'B)\t2003', 'B)\t73-வது சட்டத் திருத்தம்', 'B)\t1992', 'B)\tமெட்ரிக்குலேசன் கல்வி முறை', 'B)\tமதுரை ', 'B)\t2006', 'B)\tகருணாநிதி', 'B)\tஹிந்தி', 'B)\tஅண்ணா', 'B)\t2007', 'B)\tஅனந்தகிருஷ்ணன்', 'B)\tஅனைத்து சாதியினரும் அர்ச்சகராகும் சட்டம்', 'B)\t1971', 'B)\tஜெயலலிதா', 'B)\t1957', 'B)\t1973', 'B)\tஜெயலலிதா', 'B)\t1998', 'B)\t1998', 'B)\t1997', 'B)\tகல்வி வளர்ச்சி நாள்', 'B)\tமேலக்கோட்டை', 'B)\t1970', 'B)\tஜெயலலிதா', 'B) 1890 ஜூலை 30', 'B)1923', 'B)1923', 'B)1912', 'B) டாக்டர் தர்மாம்பாள்', 'B)1929', 'B) மார்த்தாண்டம் பைரவர் தொண்டைமான்', 'B) டாக்டர் எஸ் தர்மாம்பாள்', 'B)1929', 'B)1929', 'B)1923', 'B) சென்னை மாநகராட்சியின் முதல் துணை மேயர்', 'B)1923', 'B)1923', 'B) டாக்டர் தர்மாம்பாள்', 'B)1949', 'B)1949', 'B) 1949 ஜூலை 22', 'B) டாக்டர் தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B)1890', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B)1939', 'B) சுப்ரமணியம்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B)1940', 'B)1890', 'B) இறைப்பணி, கலைப்பணி', 'B)1920', 'B) பெரியார் மற்றும் ராமநாதன்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B) 1959 ஜூன் இருபத்தி ஏழு', 'B) 1975', 'B) 1975', 'B) 1975', 'B) 1975', 'B) 1975', 'B) 1909 செப்டம்பர் 15', 'B) காசி', 'B)1921', 'B)1921', 'B)1921', 'B)1921', 'B) திருவிதாங்கூர் அரசு', 'B) சேரன்மகாதேவி என்னுமிடத்தில் நடத்தப்பட்ட குருகுலப் பள்ளியில் பார்ப்பனர் மற்றும் பார்ப்பனரல்லாத மாணவர்களுக்குத் தனித்தனியே உணவு மற்றும் குடிநீர் வழங்கப்பட்டது கண்டித்து தனது சென்னை மாநில காங்கிரஸ் தலைவர் பதவியை ராஜினாமா செய்தார்', 'B) சேலம்', 'B)1921', 'B) புரட்சி', 'B) மூடநம்பிக்கைகளையும் பழமை வாதத்தையும் ஒழிக்கப்பட்டது', 'B)1918-1919', 'B) சுப்ரமணியம்', 'B) சுப்ரமணியம்', 'B)1921', 'B)400', 'B)1921', 'B) புரட்சி', 'B)பாரதியார்', 'B)1954', 'B)பாரதியார்', 'B)1934', 'B) பனகல் அரசர்', 'B)1937-1939', 'B) தமிழ் எழுத்துச் சீர்திருத்தத்தை கொண்டு வந்தார்', 'B) சிங்காரவேலர்', 'B)பாரதியார்', 'B)பாரதியார்', 'B) சேலம்', 'B) 1939 நவம்பர் 13', 'B) 1969 பிப்ரவரி 3', 'B) செங்கல்பட்டு', 'B) எம்டி கிருஷ்ணா கிருஷ்ணா', 'B) வினேஷ்போகாட்', 'B) 11']

c = ['C) வள்ளி', 'C)\tஎம்ஜிஆர்', 'C)\tவரதராஜன் குழு', 'C)\t1973', 'C)\tஎம்ஜிஆர்', 'C)\tஎம்ஜிஆர்', 'C)\tஎம்ஜிஆர்',
     'C)\tகொள்கை பரப்பு செயலாளர்', 'C)\t1973', 'C)\t1953', 'C)\t1954', 'C)\t1962', 'C)\t1950', 'C)\tராஜகோபாலாச்சாரி', 'C)\tகூற்றும் காரணமும் தவறு', 'C)\t1978', 'C)\t1971', 'C)\tகாமராஜர்', 'C)\t1967', 'C)\tஎம்ஜிஆர்', 'C)\tமதுரை', 'C)\tஇந்தியா-பங்களாதேஷ் யுத்தம்', 'C)\tஎம்ஜிஆர்', 'C)\tஎம்ஜிஆர்', 'C)\t1956', 'C)\tவிருதுநகர்', 'C)\t1988', 'C)\t20', 'C)\t1962', 'C)\tகுடிசை மாற்று வாரியம்', 'C)\t1991', 'C)\tதிருநெல்வேலி', 'C)\tசேலம்', 'C)\tஎம்ஜிஆர்', 'C)\tதிருநெல்வேலி', 'C)\tஎம்ஜிஆர்', 'C)\t1982', 'C)\t1987', 'C)\t1988', 'C)\t1974', 'C)\tஎம்ஜிஆர்', 'C)\tகோபாலசுவாமி குழு', 'C)\tமகாராஜன் குழு', 'C)\tசத்தியவாணி முத்து', 'C)\t1993', 'C)\tராதாகிருஷ்ணன்', 'C)\t2002', 'C)\tசட்ட ஒழுங்கு பிரிவு', 'C)\t2005', 'C)\t74 வது திருத்தம்', 'C)\t1994', 'C)\tபுதிய கல்வித் திட்டம்', 'C)\tசென்னை', 'C)\t2007', 'C)\tஸ்டாலின்', 'C)\tகன்னடம்', 'C)\tஎம்ஜிஆர்', 'C)\t2008', 'C)\tராஜமன்னார்', 'C)\tவிவசாயிகளுக்கு நிலம் வழங்கும் திட்டம்', 'C)\t1972', 'C)\tராமசாமி', 'C)\t1947', 'C)\t1874', 'C)\tஅம்பேத்கர்', 'C)\t1999', 'C)\t1999', 'C)\t1996', 'C)\tசமூகநீதி நாள்', 'C)\tபாப்பா குறிச்சி', 'C)\t1971', 'C)\tஅம்பேத்கர்', 'C) 1983 ஜூலை 30', 'C)1930', 'C)1930', 'C)1915', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1926', 'C) முத்து வடுகநாதர்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1926', 'C)1947', 'C)1926', 'C) சட்டமன்றத்திற்கு மக்களால் தேர்ந்தெடுக்கப்பட்ட முதல் பெண்', 'C)1926', 'C)1926', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1954', 'C)1954', 'C) 1954 ஜூலை 22', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1883', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1940', 'C) வெங்கட்டராமன்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C)1925', 'C)1883', 'C) ஏதுமில்லை', 'C)1927', 'C) மயூரமணி சின்னையா பிள்ளை', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) 1962 ஜூன் இருபத்தி ஏழு', 'C) 1967', 'C) 1967', 'C) 1967', 'C) 1967', 'C) 1967', 'C) 1903 ஜூலை 15', 'C)கேரளா', 'C)1923', 'C)1923', 'C)1923', 'C)1923', 'C) மைசூர் அரசு', 'C) இரண்டும் சரி', 'C) செங்கல்பட்டு', 'C)1924', 'C) விடுதலை', 'C) பெண் கல்வி விதவை மறுமணம் கலப்புத் திருமணம் குழந்தை திருமண முறை ஒழிப்பு ஆகியவற்றுக்காக குரல் எழுப்பியது', 'C)1917-1919', 'C) ஜார்ஜ் ஜோசப்', 'C) ஜார்ஜ் ஜோசப்', 'C)1924', 'C)1000', 'C)1924', 'C) விடுதலை', 'C) பெரியார்', 'C)1955', 'C) ஜார்ஜ் ஜோசப்', 'C)1938', 'C) பெரியார்', 'C)1938-1940', 'C) ரோமானிய எழுத்து முறையைப் பின்பற்றவும் அறிவுறுத்தினார்', 'C) ஜார்ஜ் ஜோசப்', 'C) ஜார்ஜ் ஜோசப்', 'C) ஜார்ஜ் ஜோசப்', 'C) ஈரோடு', 'C)1937 நவம்பர் 13', 'C)1975  அக்டோபர் 2', 'C) ஈரோடு', 'C) எம்டி கங்கா கிருஷ்ணா', 'C) கனேஷ்போகாட்', 'C) 12']

d = ['D) இவற்றுள் எதுவும் இல்லை', 'D)\tகாமராஜர்', 'D)\tராஜமன்னார் குழு', 'D)\t1964', 'D)\tஜெயலலிதா', 'D)\tஜெயலலிதா',
     'D)\tஜெயலலிதா', 'D)\tஏதுமில்லை', 'D)\t1967', 'D)\t1977', 'D)\t1953', 'D)\t1969', 'D)\t1963', 'D)\tகருணாநிதி', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\t1988', 'D)\t1980', 'D)\tஅண்ணாதுரை', 'D)\t1980', 'D)\tகாமராஜர்', 'D)\t A & B', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tகாமராஜர்', 'D)\tகாமராஜர்', 'D)\t1977', 'D)\tதஞ்சாவூர்', 'D)\t1943', 'D)\t25', 'D)\t1972', 'D)\tநகர மேம்பாட்டு வாரியம்', 'D)\t2001', 'D)\tதூத்துக்குடி', 'D)\tநாமக்கல்', 'D)\tஜெயலலிதா', 'D)\tதூத்துக்குடி', 'D)\tஜெயலலிதா', 'D)\t1983', 'D)\t1988', 'D)\t1980', 'D)\t1975', 'D)\tஜெயலலிதா', 'D)\tமுத்துக்குமரன் குழு', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tமுத்துலட்சுமி', 'D)\t1994', 'D)\tவி வி கிரி', 'D)\t2003', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t2007', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t1997', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tதிருச்சி', 'D)\t2009', 'D)\tமன்மோகன் சிங்', 'D)\tதமிழ்', 'D)\tஜெயலலிதா', 'D)\t2009', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t1975', 'D)\t காமராஜர்', 'D)\t1930', 'D)\t1974', 'D)\tராஜாஜி', 'D)\t2000', 'D)\t2000', 'D)\t1999', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tஆயிரம் விளக்கு', 'D)\t1973', 'D)\tராஜாஜி', 'D) 1879 ஜூலை 30', 'D)1929', 'D)1929', 'D)1917', 'D) நீலாம்பிகை அம்மையார்', 'D)1931', 'D) திருமலை நாயக்கர்', 'D) நீலாம்பிகை அம்மையார்', 'D)1930', 'D)1930', 'D)1930', 'D) அனைத்தும் சரி', 'D)1930', 'D)1930', 'D) அம்மையார்', 'D)1952', 'D)1968', 'D) 1968 ஜூலை 22', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D)1878', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D)1952', 'D) காமராஜர்', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D)1959', 'D)1878', 'D) உறைபனி, இறைப்பணி', 'D)1930', 'D) அனைத்தும் சரி', 'D) நீலாம்பிகை அம்மையார்', 'D) நீலாம்பிகை அம்மையார்', 'D) 1952 ஜூன் இருபத்தி ஏழு', 'D)1981', 'D) 1981', 'D) 1981', 'D) 1981', 'D) 1985-1986', 'D) 1878 டிசம்பர் 10', 'D) குஜராத்', 'D)1924', 'D)1924', 'D)1924', 'D)1924', 'D) தமிழக அரசு', 'D) ஏதுமில்லை', 'D) சென்னை', 'D)1925', 'D) அனைத்தும் சரி', 'D) அனைத்தும் சரி', 'D)1916-1918', 'D) சிங்காரவேலர்', 'D) சிங்காரவேலர்', 'D)1925', 'D)900', 'D)1925', 'D) அனைத்தும் சரி', 'D) அறிஞர் அண்ணா', 'D)1960', 'D) அறிஞர் அண்ணா', 'D)1936', 'D) லிங்குசாமி நாயுடு', 'D)1939-1940', 'D) அனைத்து சரி', 'D) அறிஞர் அண்ணா', 'D) அறிஞர் அண்ணா', 'D) அறிஞர் அண்ணா', 'D) சென்னை', 'D)1936 நவம்பர் 13', 'D)1972 டிசம்பர் 25', 'D) விழுப்புரம்', 'D) எம்டி கிருஷ்ணா சுவாதி', 'D) மணீஷ்போகாட்', 'D) 9']

correct_answer = ['B) கோமளவள்ளி', 'B)\tகருணாநிதி', 'D)\tராஜமன்னார் குழு', 'C)\t1973', 'A)\tகருணாநிதி', 'C)\tஎம்ஜிஆர்',
                  'A)\tகருணாநிதி', 'B)\tஉயர்மட்ட குழு உறுப்பினர்', 'D)\t1967', 'C)\t1953', 'A)\t1956', 'B)\t1957', 'A)\t1969', 'C)\tராஜகோபாலாச்சாரி', 'B)\tகூற்று சரி காரணம் தவறு', 'B)\t1965', 'B)\t1972', 'C)\tகாமராஜர்', 'B)\t1951', 'A)\tஅண்ணாதுரை', 'D)\t A & B', 'B)\tஇந்தியா சீனா யுத்தம்', 'A)\tஅண்ணாதுரை', 'A)\tஅண்ணாதுரை', 'B)\t1955', 'B)\tகுடியாத்தம்', 'A)\t1942', 'A)\t15', 'B)\t1971', 'C)\tகுடிசை மாற்று வாரியம்', 'A)\t1971', 'A)\tதிருச்சி', 'C)\tசேலம்', 'D)\tஜெயலலிதா', 'A)\tமதுரை', 'C)\tஎம்ஜிஆர்', 'C)\t1982', 'B)\t1986', 'A)\t1978', 'A)\t1972', 'C)\tஎம்ஜிஆர்', 'B)\tவர்கீஸ் மற்றும் ஆம்புரோஸ் குழு', 'C)\tமகாராஜன் குழு', 'A)\tஜானகி ராமச்சந்திரன்', 'C)\t1993', 'B)\tசங்கர் தயாள் சர்மா', 'B)\t2001', 'B)\tபெண்கள் பிரிவு', 'C)\t2005', 'A)\t76 வது சட்ட திருத்தம்', 'C)\t1994', 'A)\tசமச்சீர் கல்வி முறை', 'A)\t கோவை', 'C)\t2007', 'B)\tகருணாநிதி', 'D)\tதமிழ்', 'B)\tஅண்ணா', 'B)\t2007', 'B)\tஅனந்தகிருஷ்ணன்', 'B)\tஅனைத்து சாதியினரும் அர்ச்சகராகும் சட்டம்', 'B)\t1971', 'A)\tகருணாநிதி', 'C)\t1947', 'D)\t1974', 'C)\tஅம்பேத்கர்', 'C)\t1999', 'D)\t2000', 'C)\t1996', 'B)\tகல்வி வளர்ச்சி நாள்', 'D)\tஆயிரம் விளக்கு', 'A)\t1969', 'A)\tகருணாநிதி', 'A) 1886 ஜூலை 30', 'B)1923', 'A)1952', 'B)1912', 'A) முத்துலட்சுமி ரெட்டி', 'C)1926', 'B) மார்த்தாண்டம் பைரவர் தொண்டைமான்', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'D)1930', 'C)1947', 'D)1930', 'B) சென்னை மாநகராட்சியின் முதல் துணை மேயர்', 'D)1930', 'D)1930', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'C)1954', 'A)1956', 'D) 1968 ஜூலை 22', 'A) டாக்டர் முத்துலட்சுமி ரெட்டி', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'B)1890', 'B) தர்மாம்பாள்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'B) தர்மாம்பாள்', 'C)1940', 'A) அவினாசிலிங்கம் செட்டியார்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'B) தர்மாம்பாள்', 'D)1959', 'C)1883', 'B) இறைப்பணி, கலைப்பணி', 'A)1925', 'D) அனைத்தும் சரி', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) மூவலூர் ராமாமிர்தம் அம்மையார்', 'C) 1962 ஜூன் இருபத்தி ஏழு', 'A)1989', 'B) 1975', 'C) 1967', 'D) 1981', 'D) 1985-1986', 'A) 1879 செப்டம்பர் 17', 'B) காசி', 'A)1919', 'A)1919', 'B)1921', 'D)1924', 'B) திருவிதாங்கூர் அரசு', 'C) இரண்டும் சரி', 'A) காஞ்சிபுரம்', 'D)1925', 'D) அனைத்தும் சரி', 'D) அனைத்தும் சரி', 'B)1918-1919', 'C) ஜார்ஜ் ஜோசப்', 'B) சுப்ரமணியம்', 'D)1925', 'A)500', 'D)1925', 'A) குடியரசு', 'C) பெரியார்', 'B)1954', 'A) பெரியார்', 'D)1936', 'C) பெரியார்', 'B)1937-1939', 'D) அனைத்து சரி', 'A) பெரியார்', 'A) பெரியார்', 'A) பெரியார்', 'B) சேலம்', 'A) 1938 நவம்பர் 13', 'D)1972 டிசம்பர் 25', 'B) செங்கல்பட்டு', 'A) எம்டி ஸ்வர்ண கிருஷ்ணா', 'B) வினேஷ்போகாட்', 'A) 10']

@app.route("/", methods=["GET", "POST"])
def home():
    warning = request.args.get("warn")

    if current_user.is_authenticated:
        completed = Test24.query.filter_by(examinee_id=current_user.user_id).first()

        if request.args.get("fee"):
            name = request.args.get("name")
            bending = request.args.get("bending")
            logged_in = request.args.get("logged_in")

            return render_template("index.html", fee=True, name=name, bending=bending, logged_in=logged_in,
                                   completed=completed)

        else:
            if completed:
                return render_template("index.html", warning=warning, completed=completed)

            else:
                return render_template("index.html", warning=warning)

    else:
        return render_template("index.html", warning=warning)


@app.route("/register", methods=['GET', 'POST'])
def register():
    form = RegisterForm()
    errors = []

    if form.validate_on_submit():
        hash_and_salted_password = generate_password_hash(
            request.form.get('password'),
            method='pbkdf2:sha256',
            salt_length=8
        )

        new_user = User(
            email=request.form.get('email'),
            username=request.form.get('name'),
            password=hash_and_salted_password,
        )

        if User.query.filter_by(email=request.form.get('email').lower()).first():
            return redirect(url_for('login', msg="You've already been registered. Please Login!"))

        elif User.query.filter_by(username=request.form.get('name')).first():
            errors.append('The username has already been taken')
            return render_template("register.html", errors=errors, form=form)

        else:
            errors.clear()

            if request.form.get('email') in verified_emails:

                db.session.add(new_user)
                db.session.commit()

                login_user(new_user)

                # redirect to the home page with fee details.
                return redirect(url_for('home', fee=True, name=student_mails[request.form.get('email')][0],
                                        bending=student_mails[request.form.get('email')][1]))

            else:
                return redirect(url_for('home', warn=True))

    return render_template("register.html", form=form)


@app.route("/login", methods=['GET', 'POST'])
def login():
    form = LoginForm()
    errors = []

    if form.validate_on_submit():
        email = request.form.get('email')
        password = request.form.get('password')

        # Find user by email entered.
        user = User.query.filter_by(email=email).first()

        if not user:
            errors.append("That email does not exist, please Register and then come back.")
            return render_template("login.html", errors=errors, form=form)

        # Check stored password hash against entered password hashed.
        if check_password_hash(user.password, password):
            login_user(user)
            errors.clear()

            # checking the user's payment details
            # redirect to the home page with fee details.
            return redirect(url_for('home', fee=True, name=student_mails[request.form.get('email')][0],
                                    bending=student_mails[request.form.get('email')][1]))

        else:
            errors.append('Incorrect Password! Try Again')
            return render_template("login.html", errors=errors, form=form)

    msg = request.args.get("msg")
    return render_template("login.html", form=form, errors=errors, msg=msg)


@app.route("/exam", methods=["GET", "POST"])
def exam():
    global attended
    test_no = request.args.get("test_no")
    opentime = exam_sites[test_no][0]
    closetime = exam_sites[test_no][1]

    # if test_no == "15":
    #     attended = Test15.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "16":
    #         attended = Test16.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "17":
    #         attended = Test17.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "18":
    #     attended = Test18.query.filter_by(examinee_id=current_user.user_id).first()

    # if test_no == "19":
    #     attended = Test19.query.filter_by(examinee_id=current_user.user_id).first()

    # if test_no == "20":
    #     attended = Test20.query.filter_by(examinee_id=current_user.user_id).first()

    if test_no == "21":
        attended = Test21.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "22":
        attended = Test22.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "23":
        attended = Test23.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "24":
        attended = Test24.query.filter_by(examinee_id=current_user.user_id).first()

    else:
        return redirect(url_for("home", warn=f"The Test number {test_no} is not available!"))

    if attended is None:
        return render_template("exam.html", opentime=json.dumps(opentime), closetime=json.dumps(closetime),
                               sl_no=sl_no, ques=ques, a=a, b=b, c=c, d=d, correct_answer=correct_answer,
                               answers=[], test_no=test_no)
    else:
        return redirect(url_for("home", warn="You have already committed this exam. Check the results instead."))


@app.route('/evaluate', methods=["GET", "POST"])
def evaluate():
    global new_examinee
    answers = []
    final_result = []
    marks = 0

    for i in range(0, len(sl_no)):
        user_answer = request.form[f'answers{i}']

        if user_answer is None:
            answers.append("None")

        else:
            answers.append(user_answer)

    for j in range(len(correct_answer)):

        if answers[j].strip() == correct_answer[j].strip():
            marks += 1
            final_result.append("Correct")

        else:
            final_result.append("Wrong")

    # return f"{final_result, answers, correct_answer}"

    st_answers = '#||#'.join(answers)
    f_result = "#||#".join(final_result)

    # return f"{correct_answer, answers}"
    # return f"{[s_answers for s_answers in correct_answer]}"
    # return f"{[s_answers for s_answers in answers]}"
    # return f"{final_result}"

    actual_time = datetime.datetime.now()
    s_time = actual_time.strftime('%Y-%m-%d %H:%M:%S.%f')

    new_examinee = Test24(
        test_author=current_user,
        user_answers=st_answers,
        marks=marks,
        final_result=f_result,
        date=s_time[:-7],
        examinee_name=current_user.username
    )

    db.session.add(new_examinee)
    db.session.commit()

    return redirect(url_for('home', warn="You have successfully completed the exam. Click results to see results."))


@app.route("/result", methods=["GET", "POST"])
def result():
    global answers, final_result, time, marks
    test_no = request.args.get("test_no")

    # if test_no == "15":
    #     attended_student = Test15.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "16":
    #     attended_student = Test16.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "17":
    #     attended_student = Test17.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "18":
    #     attended_student = Test18.query.filter_by(examinee_id=current_user.user_id).first()

    # if test_no == "19":
    #     attended_student = Test19.query.filter_by(examinee_id=current_user.user_id).first()

    # if test_no == "20":
    #     attended_student = Test20.query.filter_by(examinee_id=current_user.user_id).first()

    if test_no == "21":
        attended_student = Test21.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "22":
        attended_student = Test22.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "23":
        attended_student = Test23.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "24":
        attended_student = Test24.query.filter_by(examinee_id=current_user.user_id).first()

    else:
        return redirect(url_for('home', warn="The result for the exam that you had selected is no longer available"))

    answers = attended_student.user_answers.split('#||#')
    final_result = attended_student.final_result.split('#||#')
    marks = attended_student.marks
    time = attended_student.date

    return render_template("results.html", answers=answers, marks=marks, sl_no=sl_no, ques=ques, a=a, b=b, c=c, d=d,
                           correct_answer=correct_answer, final_result=final_result, time=time)


@app.route("/dashboard")
def dashboard():
    all_record = Test24.query.all()

    return render_template("dashboard.html", all_record=all_record)


@app.route("/change_details", methods=["GET", "POST"])
def change_password():
    form = ChangeDetails()
    errors = []

    if form.validate_on_submit():
        email = request.form.get('email')
        old_password = request.form.get('old_password')
        new_password = request.form.get('new_password')

        user = User.query.filter_by(email=email).first()

        if not user:
            errors.append("That email does not exist, please Register and then come back.")
            return render_template("login.html", errors=errors, form=form)

        # Check stored password hash against entered password hashed.
        if check_password_hash(user.password, old_password):

            if User.query.filter_by(email=email).first():
                old = User.query.filter_by(email=email).first()
                pass_to_update = User.query.get(old.user_id)

                hash_and_salted_password = generate_password_hash(
                    new_password,
                    method='pbkdf2:sha256',
                    salt_length=8
                )

                pass_to_update.password = hash_and_salted_password

                db.session.commit()

                logout_user()
                return redirect(url_for('login', msg="Your password has been changed successfully. "
                                                     "Please Login with your new password."))

        else:
            errors.append("Please check your password.")
            return render_template("change_details.html", form=form, errors=errors)

    return render_template("change_details.html", form=form, errors=errors)


@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('home'))


@app.route("/admission", methods=["GET", "POST"])
def new_admission():
    form = AdmissionForm()

    if form.validate_on_submit():
        new_member = Admission(
            name=form.name.data,
            mobile_number=form.number.data,
            email=form.email.data,
        )

        db.session.add(new_member)
        db.session.commit()

        verification_code = random.randint(2000, 10000)

        with smtplib.SMTP('smtp.gmail.com', 587) as connection:
            connection.starttls()
            connection.login(MY_EMAIL, MY_PASSWORD)
            connection.sendmail(from_addr=MY_EMAIL,
                                to_addrs=request.form.get('email'),
                                msg=f"Subject:WELCOME TO SENA CAREER INSTITUTE\n\nWelcome {request.form.get('name')}!"
                                    f" Happy to see you with us. Thanks for supporting us! Keep rocking! "
                                    f"Here is our Educators' number: 8610642720".encode('utf-8'))

        with smtplib.SMTP('smtp.gmail.com', 587) as connection:
            connection.starttls()
            connection.login(MY_EMAIL, MY_PASSWORD)
            connection.sendmail(from_addr=MY_EMAIL,
                                to_addrs=MY_EMAIL,
                                msg=f"Subject:NEW ADMISSION\n\n{request.form.get('name')} has made an "
                                    f"admission sign up on Sena site Here is details {request.form.get('name')},"
                                    f" {request.form.get('number')}, {request.form.get('email')}!")

        return redirect(url_for('home'))

    return render_template("register.html", form=form, admission=True)


if __name__ == '__main__':
    app.run(debug=True)
