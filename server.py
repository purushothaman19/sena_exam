import datetime
import random
import smtplib
import pandas
from flask import Flask, render_template, redirect, url_for, flash, request, abort
from flask_bootstrap import Bootstrap
from flask_ckeditor import CKEditor
from werkzeug.security import generate_password_hash, check_password_hash
from flask_sqlalchemy import SQLAlchemy
from flask_login import UserMixin, login_user, LoginManager, login_required, current_user, logout_user
from flask_wtf import FlaskForm
from sqlalchemy.orm import relationship
from wtforms import StringField, SubmitField, PasswordField
from wtforms.fields.html5 import EmailField
from wtforms.validators import DataRequired
from functools import wraps
import os
import json

app = Flask(__name__)
app.config['SECRET_KEY'] = os.environ.get("SECRET_KEY")
ckeditor = CKEditor(app)
Bootstrap(app)

app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get("DATABASE_URL", "sqlite:///sena-base.db")
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

admin = False
login_manager = LoginManager()
login_manager.init_app(app)

MY_EMAIL = os.environ.get("MY_EMAIL")
SENA_EMAIL = 'sivagangainagarajan@gmail.com'
MY_PASSWORD = os.environ.get("MY_PASSWORD")


@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))


def admin_only(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        # If id is not 1 then return abort with 403 error
        if current_user.user_id != 1:
            return abort(403)
        # Otherwise continue with the route function
        return f(*args, **kwargs)

    return decorated_function


class User(UserMixin, db.Model):
    __tablename__ = "User"
    user_id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(100), unique=True)
    password = db.Column(db.String(100))
    username = db.Column(db.String(100))
    # test = relationship("Test15", back_populates="test_author")
    # test16 = relationship("Test16", back_populates="test_author")
    # test17 = relationship("Test17", back_populates="test_author")
    # test18 = relationship("Test18", back_populates="test_author")
    test19 = relationship("Test19", back_populates="test_author")
    test20 = relationship("Test20", back_populates="test_author")
    test21 = relationship("Test21", back_populates="test_author")
    test22 = relationship("Test22", back_populates="test_author")

    def get_id(self):
        return self.user_id


# class Test15(db.Model):
#     __tablename__ = "Test_15"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test")
#     marks = db.Column(db.Integer)
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test16(db.Model):
#     __tablename__ = "Test_16"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test16")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test17(db.Model):
#     __tablename__ = "Test_17"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test17")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


# class Test18(db.Model):
#     __tablename__ = "Test_18"
#     user_id = db.Column(db.Integer, primary_key=True)
#     examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
#     test_author = relationship("User", back_populates="test18")
#     marks = db.Column(db.Integer)
#     examinee_name = db.Column(db.String())
#     user_answers = db.Column(db.String())
#     final_result = db.Column(db.String())
#     date = db.Column(db.String(250), nullable=False)


class Test19(db.Model):
    __tablename__ = "Test_19"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test19")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test20(db.Model):
    __tablename__ = "Test_20"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test20")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test21(db.Model):
    __tablename__ = "Test_21"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test21")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Test22(db.Model):
    __tablename__ = "Test_22"
    user_id = db.Column(db.Integer, primary_key=True)
    examinee_id = db.Column(db.Integer, db.ForeignKey("User.user_id"))
    test_author = relationship("User", back_populates="test22")
    marks = db.Column(db.Integer)
    examinee_name = db.Column(db.String())
    user_answers = db.Column(db.String())
    final_result = db.Column(db.String())
    date = db.Column(db.String(250), nullable=False)


class Admission(db.Model):
    __tablename__ = "New_Admission"
    user_id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100))
    mobile_number = db.Column(db.Integer)
    email = db.Column(db.String(100), unique=True)


db.create_all()
db.session.commit()


class RegisterForm(FlaskForm):
    name = StringField('Name*', validators=[DataRequired()])
    email = EmailField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    password = PasswordField('Password*', validators=[DataRequired()])
    submit = SubmitField('Register')


class LoginForm(FlaskForm):
    email = StringField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    password = PasswordField('Password*', validators=[DataRequired()])
    submit = SubmitField('Login')


class AdmissionForm(FlaskForm):
    name = StringField('Name*', validators=[DataRequired()])
    number = StringField("Phone*", validators=[DataRequired()])
    email = EmailField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    submit = SubmitField('Submit')


class ChangeDetails(FlaskForm):
    email = StringField('Email*', validators=[DataRequired(message='Enter a valid email-id')])
    old_password = PasswordField('Old Password*', validators=[DataRequired()])
    new_password = PasswordField('New Password*', validators=[DataRequired()])
    submit = SubmitField('Submit')


student_mails = {
    "mgopalakrish''075@gmail.com": ["Gopal", 2000],
    "nivir6558@gmail.com": ["Nivetha", 7000],
    "jaya26jj@gmail.com": ["Christy", 5000],
    "srjamuna1003@gmail.com": ["jamuna", 7000],
    "satheshpandian1997@gmail.com": ["Satheshpandian", 4000],
    "lakshmiraja412@gmail.com": ["Rajalaskhmi", 5000],
    "tamilarasanbe9597@gmail.com": ["Anitha", 1000],
    "rajeshkan''6341@gmail.com": ["Rajesh kan''", 3000],
    "jaishreeramgp@gmail.com": ["Yogapriya", 3000],
    "irudhayasubiksha2001@gmail.com": ["Subiksha", 0],
    "abinayaabi257@gmail.com": ["Abi", 1000],
    "shanthirasu1991@gmail.com": ["Shanthi", 0],
    "pradee1296@gmail.com": ["Pradeepa", 5000],
    "jeniferj0204@gmail.com": ["Janifer", 7000],
    "krish47457@gmail.com": ["Krishna", 0],
    "naveenaryan440@gmail.com": ["Naveen", 0],
    "veerasurya250899@gmail.com": ["Suriya", 3000],
    "amin2svg@gmail.com": ["Amin", 3000],
    "jjprincy06@gmail.com": ["Jeba Josepin Princy", 0],
    "jancybetsia20@gmail.com": ["Jancy", 0],
    "cottonpanju9@gmail.com": ["Panju", 2000],
    "rameswariv1999@gmail.com": ["Rameshwari", 2000],
    "vimaladharmar2002@gmail.com": ["Vimala", 1000],
    "devahi1993@gmail.com": ["Devahi", 0],
    "sarojiniganesan96@gmail.com": ["Sarojini", 0],
    "gangadha91@gmail.com": ["Gangadharan", 0],
    "krish''nk498@gmail.com": ["Kamatchi", 0],
    "indhuindhumathi141@gmail.com": ["Indhumathi", 4000],
    "jamespurysh@gmail.com": ["Purushothaman", 0],
    "sivagangainagarajan@gmail.com": ["Nagarajan", 0],
    "matheshsethu22@gmail.com": ["Mathesh", 4000],
    "nagarajnkarthika@gmail.com": ["Karthika", 2000],
    "keviraj482@gmail.com": ["Yogesh", 2000],
    "christyjeslina98@gmail.com": ["Christy", 3500],
    "valarmathi9415@gmail.com": ["Valarmathi", 2000],
    "mohanpothumponnuk2001@gmail.com": ["Mohan", 7000]
}

verified_emails = [mail.strip() for mail in student_mails.keys()]

exam_sites = {

    "15": ["June 14, 2021 10:00:00", "June 14, 2021 13:30:00"],
    "16": ["June 21, 2021 10:00:00", "June 21, 2021 13:30:00"],
    "17": ["June 28, 2021 10:00:00", "June 28, 2021 22:30:00"],
    "18": ["July 05, 2021 10:00:00", "July 05, 2021 13:30:00"],
    "19": ["July 12, 2021 10:00:00", "July 12, 2021 13:30:00"],
    "20": ["July 19, 2021 10:00:00", "July 19, 2021 14:00:00"],
    "21": ["July 26, 2021 10:00:00", "July 26, 2021 14:00:00"],
    "22": ["August 02, 2021 13:00:00", "August 02, 2021 19:00:00"],

}

sl_no = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
         31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
         59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
         87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
         112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
         134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
         178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200]

ques = ['எது நீதிக்கட்சியின் முன்னோடியாகும்?\n', 'சென்னை ஐக்கிய கழகம் எந்த ஆண்டு சென்னை திராவிடர் சங்கம் என்று பெயர் மாற்றம் பெற்றது??\n',
        'சென்னை திராவிடர் சங்கம் வளர்வதற்கு முக்கிய பங்காற்றியவர்??\n', 'தென்னிந்திய நல உரிமை சங்கம் '
                                                                        'தோற்றுவிக்கப்பட்ட ஆண்டு??\n', 'தென்னிந்திய '
                                                                                                       'நல உரிமைச் '
                                                                                                       'சங்கம் உருவாக '
                                                                                                       'காரணமாக '
                                                                                                       'இருந்தவர்கள்??\n', 'தென்னிந்திய நல உரிமைச் சங்கம் என்ற பெயரில் ஒரு ஆங்கில மொழி செய்தித்தாளை நடத்தி வந்தது இதனால் இந்த அமைப்பு நீதிக்கட்சி என்று அழைக்கப்பட்டது??\n\n', 'நீதிக்கட்சியில் ஆதரித்த தமிழ் பத்திரிக்கை??\n', 'மாண்டேகு செம்ஸ்போர்டு சீர்திருத்தங்களில் அடிப்படையில் எந்த ஆண்டு தேர்தலில் வெற்றிபெற்று நீதிக்கட்சி ஆட்சிக்கு வந்தது??\n', 'சென்னை சட்டசபையில் 98 இடங்களில் எத்தனை இடங்களில் நீதி கட்சி வெற்றி பெற்றது??\n', '1920இல் பிட்டி தியாகராய செட்டி அமைச்சரவைக்கு தலைமை ஏற்க மறுத்துவிட்டதால் யார் தலைமையிலான அமைச்சரவை பதவி ஏற்றது??\n', 'எந்த ஆண்டு காங்கிரஸ் கட்சி வெற்றி பெற்றது ஆனால் ஆட்சி அமைக்க வில்லை??\n', 'நீதிக்கட்சி மொத்தம் எத்தனை ஆண்டுகள் ஆட்சியில் இருந்தது??\n', 'பிராமணர் அல்லாதவர்களுக்கு உள்ளாட்சி அமைப்பு மற்றும் கல்வி நிறுவனங்களில்_____&______ ஆம் ஆண்டு இட ஒதுக்கீடு அரசாணைகள் கொண்டு வரப்பட்டது??\n\n', 'பணியாளர் தேர்வு கழகம் உருவாக்கப்பட்ட ஆண்டு?\n', '“பணியாளர் தேர்வு கழகம்” பணியாளர் தேர்வாணையம் ஆக மாற்றப்பட்ட ஆண்டு??\n', 'எந்த ஆண்டில் இந்து அறநிலையச் சட்டம் நிறைவேற்றப்பட்டு பிராமணரல்லாதோர் அர்ச்சகர்களாக கோவில்களில் பணி அமர்த்தப்பட்டனர்???\n', 'இந்து சமய அறநிலையச் சட்டம் கொண்டுவரப்பட்ட ஆண்டு??\n', 'பெண்களுக்கு வாக்குரிமை வழங்கப்பட்ட ஆண்டு??\n', 'சென்னை அரசாங்க தொழிற்சாலைகள் உதவி சட்டம் கொண்டுவரப்பட்ட ஆண்டு?\n\n', 'ஆந்திரா பல்கலைக்கழகம் உருவாக்கப்பட்ட ஆண்டு??\n', 'அண்ணாமலை பல்கலைக்கழகம் நிறுவப்பட்ட ஆண்டு??\n', '----ஆண்டு நடைபெற்ற தேர்தலில் நீதிக்கட்சி பெரும் தோல்வியடைந்தது???\n', 'எந்த ஆண்டு இந்திய அரசு சட்டப்படி மாநில சுயாட்சி அறிமுகப்படுத்தப்பட்டது??\n', '1937 ஆம் ஆண்டு நடைபெற்ற சட்டமன்ற தேர்தலில் காங்கிரஸ் கட்சி 215 இடங்களில் எத்தனை இடங்கள் வெற்றி பெற்றது???\n\n', 'காங்கிரஸ் கட்சி சட்ட மேலவையில் 46 இடங்களில் எத்தனை இடங்கள் வெற்றி பெற்றது??\n', ' ----- ஆண்டில் சி ராஜகோபாலச்சாரி தலைமையிலான காங்கிரஸ் அமைச்சரவை பதவி ஏற்றது???\n', 'சென்னை ஆயிரம் விளக்கு பகுதியில் யாரால் இலவச மதிய உணவுத் திட்டம் அறிமுகப்படுத்தப்பட்டது???\n', '1944 ஆம் ஆண்டு ---- இல் நடைபெற்ற நீதிக்கட்சி மாநாட்டில் பேரறிஞர் அண்ணா கொண்டுவந்த தீர்மானங்கள் படி நீதிக்கட்சி திராவிட கழகம் என பெயர் மாற்றம் செய்யப்பட்டது???\n', 'அடுத்தது இராமலிங்க சுவாமிகள் இராமலிங்க அடிகள் எவ்வாறு பிரபலமாக அறியப்பட்டார்??\n', 'இராமலிங்க அடிகளின் வாழ்நாள் காலம்?\n', 'இராமலிங்க அடிகளார் சிதம்பரத்திற்கு அருகே எந்த ஊரில் பிறந்தார்??\n\n', 'தந்தையின் மறைவுக்குப் பின்னர் ராமலிங்க அடிகளின் குடும்பம் எங்கிருந்து அவருடைய சகோதரி இல்லத்திற்கு குடிபெயர்ந்தது.\n', 'இராமலிங்க அடிகளை பற்றிய பின்வரும் கூற்றுகளில் சரியானது எது?\n', 'வள்ளலார் சமரச வேத சன்மார்க்க சங்கம் எனும் அமைப்பை நிறுவிய ஆண்டு??\n', 'சமரச வேத சன்மார்க்க சங்கம் பின்னாளில் எவ்வாறு பெயர் மாற்றம் செய்யப்பட்டது??\n\n', 'தன்னைப் பின்பற்றுவோர் ஒருங்கிணைப்பதற்கான ராமலிங்க அடிகளார் நிறுவிய சபை??\n', 'வள்ளலாரின் பாடல்கள் இயர் தலைப்பில் தொகுக்கப்பட்டன?\n', 'ராமலிங்க அடிகளாரின் சீடர்கள் திருவருட்பாவில் வெளியிட்ட ஆண்டு எது??\n\n', 'வள்ளலாரின் தீவிரமான சிந்தனைகள் பழமைவாத சைவர்களை ஆழமாக படுத்தியதால் அவர்கள் வள்ளலாரின் பாடல்களை----- என கண்டனம் செய்தனர் செய்தனர்??\n', 'முடிசூடும் பெருமாள் என்ற இயற்பெயர் கொண்டவர் யார்??\n', 'வைகுண்ட சுவாமிகள் வாழ்ந்த காலம் என்ன??\n', 'வைகுண்ட சுவாமிகளைப் பற்றிய வாக்கியங்களில் தவறானது எது?\n', 'வைகுண்ட சுவாமிகள் யாருடைய ஆட்சியை கருப்புப் பிசாசுகளின் ஆட்சி என்று விமர்சித்து விமர்சித்தார்?\n', ' வைகுண்ட சுவாமிகள் பற்றிய வாக்கியங்களில் சரியானதை தேர்ந்தெடு?\n', 'எந்தக் கடவுள் தன்னை மகனாக பாவித்து மறுபிறவி அழைத்ததாக வைகுண்ட சுவாமிகள் அறிவித்தார்?\n', 'கூற்று: வைகுண்டர் தெற்கு திருவிதாங்கூரின் ஒடுக்கப்பட்ட மக்களை காலணி அணியும் படி கூறினார்\nகாரணம்: தெற்கு திருவிதாங்கூரில் ஒடுக்கப்பட்ட மக்கள் எதை அணியலாம் எதை அணியக் கூடாது என்று கட்டுப்பாடு எதிர்க்கும் வகையில் வைகுண்டர் அவ்வாறு செய்தார்.\n', 'பின்வரும் கூற்றுகளில் தவறானது எது\n', 'பல்வேறு சாதனைகளை சேர்ந்த மக்களே ஒருங்கிணைப்பதற்கு வைகுண்ட சுவாமிகள் நிறுவிய அமைப்பு எது??\n\n', 'அந்த ஸ்வாமிகளை பின்பற்றியவர்கள் அவரை மிக்க மரியாதையுடன் எவ்வாறு அழைத்தனர்??\n', 'வைகுண்ட சுவாமிகள் உடைய சமய வழிபாட்டு முறை எவ்வாறு தலைப்பு இடப்பட்டது??\n', 'வைகுண்ட சுவாமி வழிபாட்டு முறையை கைவிடும்படி தன்னைப் பின்பற்றுவோர் இடம் கூறினார்??\n\n', 'வைகுண்ட சுவாமிகள் உருவாக்கிய சாதியக் கட்டுப்பாடுகள் உடைக்கப்பட்ட உணவுக் கூடங்கள் எவ்வாறு அழைக்கப்பட்டன?\n', '1867இல் சீவக சிந்தாமணி 1898இல் மணிமேகலை ஆகிய இரண்டும் முழுமையாக அச்சிடப்பட்டு வெளியிடப்பட்ட பின்னணியில் மிக முக்கியமான ஆளுமையாக இருந்தவர் யார்?\n\n', 'பண்டித அயோத்திதாசர் ஆற்றிய சமூக பணிகளில் சேராதது எது??\n\n', 'பண்டித அயோத்திதாசர் இன் வாழ்நாள் காலம் என்ன??\n', 'அயோத்திதாசர் பிறந்த ஊர்?\n', 'அயோத்திதாசர் புலமை பெற்ற மொழிகளில் சேராதது எது??\n', 'அயோத்திதாசர் பற்றிய கூற்றுகளில் தவறானது தேர்ந்தெடுக்க\n', 'ஒடுக்கப்பட்டோரின் கோவில் நுழைவுக்கு ஆதரவாக குரல் எழுப்புவதற்காக பண்டிதர் அயோத்திதாசர் நிறுவிய அமைப்பு எது?\n\n', ' திராவிட கழகம் என்னும் அமைப்பை 1882ல் நிறுவியவர் யார்?\n\n', 'அயோத்திதாசர் திராவிட பாண்டியன் என்னும் இதழைத் தொடங்கி ஆண்டு எது?\n', 'அயோத்திதாசர் திராவிட மகாஜன சபை எந்த ஆண்டு\nநிறுவினார்??\n\n', 'திராவிட மகாஜன சபையின் முதல் மாநாடு நடைபெற்ற இடம் எது??\n\n', '1907இல் அயோத்திதாசர் தொடங்கிய வாராந்திர பத்திரிக்கை எது??\n\n', 'அயோத்திதாசர் இலங்கை சென்று பௌத்தத்தைத் தழுவிய ஆண்டு என்ன??\n\n', 'பவுத்த மதத்தின் வழியே பகுத்தறிவின் அடிப்படையிலான சமத்துவத்தை கட்டமைப்பதற்கான அயோத்திதாசர் ______ என்னும் அமைப்பை நிறுவினார்??\n\n', 'அயோத்திதாசர் சாக்கிய பௌத்த சங்கத்தை எங்கு நிறுவினார்??\n\n\n', 'சி என் அண்ணாதுரை பிறந்த ஆண்டு?\n\n', 'அண்ணா MA பட்டத்தை எந்த கல்லூரியில் முடித்தார்??\n', ' அண்ணா எந்த கட்சியின் வாயிலாக அரசியலில் நுழைந்தார்??\n\n', 'அண்ணா----- இல் பெரியாரால் துவக்கப்பட்ட இந்தி எதிர்ப்பு மாநாட்டில் கலந்துகொண்டு இந்தி மொழிக்கு எதிராக குரல் எழுப்பினர்??\n\n', '1944 ஆம் ஆண்டு சேலத்தில் நடைபெற்ற மாநாட்டில் நீதிக்கட்சியின் பெயரைத் திராவிடர் கழகம் என மாற்றம் செய்ய தீர்மானம் கொண்டு வந்தவர்??\n', 'அண்ணா திராவிட முன்னேற்ற கழகம் என்ற புதிய கட்சியைத் தொடங்கிய ஆண்டு??\n', 'எந்த ஆண்டு நடைபெற்ற தேர்தலில் வெற்றி பெற்று அண்ணா தமிழக முதலமைச்சராக பொறுப்பேற்றார்??\n', 'ஒரு ரூபாய்க்கு ஒரு படி அரிசி என்ற திட்டத்தை அறிமுகப்படுத்தியவர்?\n', 'அரசமைப்பு என்ற கொள்கை முதன் முதலில் தோன்றிய நாடு எது?', 'ஒரு சமூகத்தின் அடிப்படை தன்மையையும் அரசாட்சிக்காண கொள்கையையும் விளக்குவது எது?', 'இந்திய அரசியலமைப்புக்கான தேவையை முதல் முதலில் வலியுறுத்திய அறிக்கை', 'இந்தியாவிற்கான அரசியலமைப்பு சுதந்திரத்திற்கு வழிவகை செய்யும் என்ற காரணத்தால் அரசியலமைப்பை உருவாக்க முதன்முதலில் முன்மொழிந்த நபர்?', 'இந்திய அரசியலமைப்பு அடிப்படைத் தேவை என்ற கொள்கை பரவலாக்கப்பட்ட வருடம்', 'காங்கிரஸ் அரசியலமைப்பை அமைப்பதற்கான வேண்டுதலை வலியுறுத்தும் வகையில் தீர்மானம் நிறைவேற்றிய வருடம்', 'எதன் அடிப்படையில் அரசியல் அமைப்பை அமைக்க வேண்டும் என நேரு வரையறுத்தார்?', 'அரசியல் நிர்ணய சபையை அமைப்பதற்கான நேருவின் வரையறை வெளியான வருடம்', 'ஆங்கில அரசால் ஆகஸ்ட் சலுகை வழங்கப்பட்ட வருடம்', 'இரண்டாம் உலகப் போரின் போது இந்திய வைஸ்ராய் ஆக தலையேற்று இருந்தவர்', 'கிரிப்ஸ் குழு இந்தியா வந்தடைந்த வருடம்?', 'கிரிப்ஸ் குழுவின் முக்கிய நோக்கம்', 'வேவல் திட்டம் வருடம்', 'ராஜாஜி திட்டத்தின் வருடம்', 'அரசியல் சாசன நிர்ணய சபையை அமைப்பதற்கு இந்தியா வந்தடைந்த குழு', 'அரசியல் சாசன நிர்ணய சபை வரையறுக்கப்பட்ட வழிமுறைகளின் மூலம் ஒருங்கிணைக்கப்பட்டது எப்போது?', 'அரசியல் சாசன நிர்ணய சபையின் வரையறுக்கப்பட்ட மொத்த உறுப்பினர்களின் எண்ணிக்கை', 'சுதேச அரசுகளுக்கு ஒதுக்கப்பட்ட உறுப்பினர்களின் எண்ணிக்கை', 'அரசியல் சாசன நிர்ணய சபை உறுப்பினர்கள் தேர்ந்தெடுக்கப்பட்ட வழிமுறை', 'நிர்ணய சபை உறுப்பினர்களின் இட ஒதுக்கீட்டு பிரிவினைகள் என்ன?', 'நிர்ணய சபை உறுப்பினர் எண்ணிக்கையில் காங்கிரஸ் மற்றும் முஸ்லிம் லீக் வென்ற இடங்களின் எண்ணிக்கை', 'இந்திய அரசியல் சாசன நிர்ணய சபையில் தேர்ந்தெடுக்கப்பட்ட பெண்களின் எண்ணிக்கை', 'முதல் கூட்டத் தொடர் நடைபெற்ற நாள்', 'தற்காலிக தலைவராக பொறுப்பேற்ற தலைவர்', 'நிரந்தர தலைவர்', 'முதல் நிர்ணய சபை கூட்டத்தை புறக்கணித்த கட்சி', 'குறிக்கோள் தீர்மானத்தை இயற்றியவர்', 'குறிக்கோள் தீர்மானம் இயற்றப்பட்ட நாள்', 'குறிக்கோள் தீர்மானம் நிர்ணய சபையால் எப்போது ஏற்றுக்கொள்ளப்பட்டது', 'மாகாண குழுவின் தலைவராக பொறுப்பேற்ற தலைவர்', 'அரசியல் சாசன வரைவு குழுவின் முதல் கூட்டம்', 'வரைவுக் குழுவின் தலைவராக தேர்ந்தெடுக்கப் பட்டவர்', 'டிபி கைத்தானுக்கு பதில் வரைவுக் குழுவில் பொறுப்பேற்றவர்', 'அரசியல் சாசன நிர்ணய சபையின் சின்னம்', 'அரசியல் சாசன நிர்ணய சபையில் எத்தனை முதன்மை குழுக்கள் அமைக்கப்பட்டன ?', 'மவுண்ட்பேட்டன் திட்டம்', 'பிரிவினைக்குப் பின் இந்திய நிர்ணய சபையின் எண்ணிக்கை', 'இந்தியா காமன்வெல்த் நாடுகளின் பட்டியலில் இணைந்த வருடம்', 'மூவர்ண கொடி தேசிய கொடியாக அங்கீகரிக்கப்பட்ட வருடம்', 'வந்தே மாதரம் என்ற தேசிய பாடல் எந்த புதினத்தில் இருந்து எடுத்துக்கொள்ளப்பட்டது', 'நிர்ணய சபையின் கடைசிக் கூட்டம் நடைபெற்ற நாள்', 'சட்ட நாள்', 'பூர்ண சுயராஜ்ய நாள் காங்கிரஸால் எப்பொழுது முடிவு செய்யப்பட்டது (லாகூர்)', 'அரசியல் சாசன நிர்ணய சபை எத்தனை கூட்டத் தொடர்களை நிகழ்த்தியது', 'எத்தனை சட்டத்திருத்தங்கள் நிர்ணய சபையில் விவாதிக்கப்பட்டன?', 'முதன்மை வரைவு குழு உறுப்பினராக பொறுப்பேற்றவர்', 'அரசியல் சாசனத்தின் ஹிந்தி எழுத்து வடிவம் யாரால் எழுதப்பட்டது?', 'வரைவு குழுவை சறுக்கும் குழு என்று விமர்சித்தவர்', 'நிர்ணய சபை இந்துக்களால் நிரம்பி உள்ளது என விமர்சித்தவர்', 'நிர்ணய சபைக் கூட்டத்தின் மொத்த கால அளவு', 'இவர்களுள் அமைச்சரவை தூதுக்குழுவில் செயல்படாதவர் யார்?', 'இவற்றுள் எது அரசியல் சாசனத்தின் சிறப்பியல்பாக கருதப்படாதது ?', 'இந்திய அரசியல் சாசனத்தில் அடிப்படை உரிமைகள் எங்கிருந்து எடுத்துக்கொள்ளப்பட்டன', 'இந்திய அரசியல் சாசனம் எத்தனை வகையான அடிப்படை உரிமைகளை வரையறுக்கிறது ?', 'அடிப்படை உரிமைகள் எந்தப் பகுதியின் கீழ் அமைந்துள்ளது', 'சட்டத்தின் முன் அனைவரும் சமம் என்று கூறக்கூடிய பிரிவு', 'பிரிவு 15 எதை முன்வைக்கிறது', 'பிரிவு 15 கீழே கொடுக்கப்பட்டுள்ள எதன் அடிப்படையில் தாழ்த்துதல் கூடாது என்று வரையறுக்கவில்லை', 'அடிப்படை உரிமைகளை பாதிக்கும் எந்த சட்டமும் செல்லாது என்று கூறும் பிரிவு', 'அடிப்படை உரிமைகள் சார்ந்த சட்ட தீர்வு நேரடியாக எங்கு பெறலாம்', 'அடிப்படை உரிமைகளை உறுதிப்படுத்தும் விதமாக உயர்நீதிமன்றத்திற்கு சாசனம் வழங்கியுள்ள பேராணைகள் எத்தனை?', 'மதங்கள் சார்ந்த நம்பிக்கையும் பரப்புதலையும் எந்த பிரிவு உறுதி செய்கிறது?', 'குற்றவாளிகளுக்கான அடிப்படை உரிமைகளை உறுதி செய்யும் பிரிவு', 'பிரிவு 24 எந்த வயதுக்குட்பட்ட குழந்தைகளை வேலையில் அமர்த்துவதை தவிர்ப்பதற்காக நிறுவப்பட்டது', '21A எந்த சட்டத் திருத்தத்தின் மூலம் அடிப்படை உரிமைகளுடன் இணைக்கப்பட்டது', 'இவற்றுள் எந்தப் பிரிவு அவசர காலங்களிலும் கடைபிடிக்க வேண்டிய அவசியத்தை கொண்டுள்ளது?', 'தீண்டாமை ஒழிப்பிற்கான பிரிவு', 'பேராணைகளை உச்சநீதிமன்றம் செயல்படுத்துவதற்கான அதிகாரத்தை எந்தப் பிரிவு வழங்குகிறது ?', 'சத்யமேவ ஜயதே என்பதற்கான பொருள்', 'இந்திய தேசியக் கொடியை வடிவமைத்த பிங்கலி வெங்கைய்யா எந்த பகுதியை சேர்ந்தவர்?', 'கொடிகாத்த குமரன் என்று அழைக்கப்பட்ட திருப்பூர் குமரன் ஈரோடு மாவட்டத்தில் எங்கு பிறந்தார்?', 'தமிழக மாநில விலங்கு', 'இந்திய ரூபாய் சின்னத்தை வடிவமைத்தவர்', 'லாக்டோபாசிலஸ் தேசிய நுண்ணுயிர் ஆக கருதப்படும் இது இவ்வகையைச் சேர்ந்தது', 'காந்தியின் பிறந்த நாளான அக்டோபர் 2 சர்வதேச அகிம்சை நாளாக ஐநா எந்த ஆண்டிலிருந்து அங்கீகரித்து வருகிறது?', 'மின்னணு வணிக நிறுவனங்களுக்கு சமமான வரி விதிப்பதற்கு இந்தியாவுக்கு எதிராக பதிலடி கொடுக்கும் வர்த்தக நடவடிக்கையை முன்மொழிந்துள்ள நாடு எது', 'அண்மைச் செய்திகளில் இடம் பெற்ற “HEAL-COVID”என்ற நாடு தழுவிய சோதனையை செயல்படுத்தப்படவுள்ள நாடு எது', 'அண்மைச் செய்திகளில் இடம் பெற்ற கமலேஷ் சக்கரவர்த்தி என்பவர் யார்', 'ஓய்வுபெற்ற போர்க்குணம் உள்ள நாய்களை “சிகிச்சை நாய்களாக” நியமிக்க முடிவு செய்துள்ள ஆயுதப்படை எது', 'இந்தோ- தென்கொரியா நட்பு பூங்கா கட்டப்பட்டுள்ள இடம் எது', 'எந்த நாட்டின் இளைஞர்களுக்காக சுவர்ண ஜெயந்தி உதவி தொகை திட்டத்தை இந்திய பிரதமர் தொடங்கி வைத்துள்ளார்', 'உலகின் முதல் கப்பல் சுரங்கப்பாதை கட்டப்படுகிற நாடு எது', 'பன்னாட்டு விண்வெளி மையத்தில் கண்டறியப்பட்ட புதிய வகை பாக்டீரியத்திற்கு பின்வரும் எந்த இந்திய அறிவியலாளர் பெயர் சூட்டப்பட்டுள்ளது', 'ஆசிய கால்பந்து கூட்டமைப்பின் மகளிர் ஆசிய கோப்பை 2022 போட்டியை நடத்த உள்ள நாடு எது', 'புவி மணி நேர நாளானது ஆண்டுதோறும் எந்த மாதத்தில் கடைசி சனிக்கிழமை அனுசரிக்கப்படுகிறது', 'அண்மையில் தொடங்கி வைக்கப்பட்ட மிதாலி விரைவு என்ற புதிய பயணிகள் ரயில் ஆனது டாக்காவையும் பின்வரும் எந்த இந்திய நகரத்தையும் இனைக்கிறது', 'சாலை போக்குவரத்து அமைச்சகத்தின் அன்மைய தரவுகளின் படி இந்தியாவில் அதிக எண்ணிக்கையிலான பழைய வாகனங்கள் உள்ள மாநிலம் எது', 'மத்திய தகவல் ஆணையத்தின் ஆண்டு அறிக்கையின்படி அதிகபட்ச கோரிக்கைகளை நிராகரித்த மத்திய அமைச்சகம் எது', '“சாந்திஓக்ரோசேனா-2021” என்பது இந்தியாவிற்கும் எந்த நாட்டிற்கும் இடையிலான ஒரு கூட்டு ராணுவ பயிற்சி ஆகும்', '“வஜ்ர பிரகார்-2021” என்பது இந்தியாவின் சிறப்பு படைக்கும் வேறு எந்த நாட்டிற்கும் இடையே நடத்தப்படும் ராணுவ பயிற்சி ஆகும்', '“ஆனந்தம்: மகிழ்ச்சிக்கான மையம்” திறக்கப்பட்டு உள்ள நிறுவனம் எது', '2020ஆம் ஆண்டில் ஆக்ஸ்போர்டு ஹிந்தி சொல்லாக தெரிவு செய்யப்பட்ட சொல்லியது', '“ஆசியா மற்றும் பசிபிக்கில் 2021”இல் “பொருளாதார மற்றும் சமூக ஆய்வினை” வெளியிட்டு 2021-2022ஆம் ஆண்டில் இந்தியாவின் வளர்ச்சியை7% என மதிப்பிட்ட நிறுவனம் எது', 'அடுத்த ஐந்து ஆண்டுகளுக்கு நிர்ணயிக்கப் பட்டுள்ள புதிய வகை பணவீக்க இலக்கு சதவீதம் எது', 'NITI ஆயோக் தொடங்கிய “AIM – PRIME” திட்டத்தின் நோக்கம் என்ன', '(1-1/3) (1- 1/4) (1- 1/5)……..(1- 1/100)ன் மதிப்பை காண்க', '3+4[4-{13-4(7+2)+6}+9] ன் மதிப்பு யாது', '© என்ற செயலியானது a©b = √a²+b² என வரையறுக்கப்படுகிறது. எனில் (3©4)©5) ன் மதிப்பு', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'What is the square root of 289 X^12 Y^6 Z^14', '8^m   =  32  then m is ', 'The value of (0.00243)^2/5  +  (0.0256)^3/4', '', '', '', '', '', '', '', '', '']

a = ['A) சென்னை ஐக்கிய கழகம்', 'A) 1916 நவம்பர்', 'A) தியாகராய  செட்டி', 'A)1916', 'A) தியாகராய செட்டி', 'A) புரட்சி',
     'A) புரட்சி', 'A)1919', 'A)63', 'A) முனுசாமி நாயுடு', 'A)1923', 'A)13', 'A)1921,1922', 'A)1924', 'A)1924', 'A)1924', 'A)1924', 'A)1924', 'A)1924', 'A)1926', 'A)1926', 'A)1926', 'A)1926', 'A)215', 'A)46', 'A) 1937 ஜூலை', 'A) முனுசாமி நாயுடு', 'A) காஞ்சிபுரம்', 'A) தாயுமானவர்', 'A)1820-1871', 'A) மருதூர்', 'A) கடலூர்', 'A) அளப்பரிய புலமையைப் பெற்றிருந்த ராமலிங்க அடிகளார் முறையான கல்வியும் பெற்றிருந்தார்', 'A)1866', 'A) சமரச சுத்த சன்மார்க்க சத்திய சங்கம்', 'A) சத்திய ஞான சபை', 'A) மருட்பா', 'A)1887', 'A) மருட்பா', 'A) அயோத்திதாசப் பண்டிதர்', 'A) 1809-1851', 'A) இவர் தென்னிந்தியாவின் தொடக்ககால சமூகத்தின் போராளிகளில் ஒருவர்', 'A) முகலாயர்கள்', 'A) பழமுதிர்ச்சோலை கோயிலுக்குச் சென்றிருந்த அவர் தெய்வீக அனுபவம் ஒன்றைப் பெற்றார்', 'A) முருகன்', 'A) கூற்றும் காரணமும் சரி காரணம் சரியான விளக்கமே', 'A) பத்தொன்பதாம் நூற்றாண்டில் அரங்கேறிய ஏனைய சமகால சீர்திருத்த இயக்கங்களை போலவே வைகுண்டசுவாமி களும் எதிர்த்தார்', 'A) பிரம்ம சமாஜம்', 'A) சுவாமி', 'A) ஐயா திரட்டு', 'A) பூடம்', 'A) வானம் தாங்கல்', 'A) அயோத்திதாச பண்டிதர்', 'A) சித்த மருத்துவம் ,தமிழ் அறிஞர்', 'A)1845-1916', 'A) அயோத்தி', 'A) ஆங்கிலம்', 'A) உயர்சாதியினரின் ராஜ்ஜியமாக விளங்கிய அச்சிட்டு வெளியிடும் இதழ் இயல்லை தனது கருவியாகக் கொண்டு அயோத்திதாசர் ஒரு புதிய அறிவை பரப்பும் முறையை முன்னெடுத்தார்', 'A) திராவிட விடுதலைக் கழகம்', 'A) பெரியார்', 'A)1882', 'A)1885', 'A) கிருஷ்ணகிரி', 'A) இந்தியத் தமிழன்', 'A)1908', 'A) சாக்கிய பௌத்த சங்கம்', 'A) இலங்கை', 'A) 1909 செப்டம்பர் 15', 'A) அண்ணாமலைப் பல்கலைக்கழகம்', 'A) காங்கிரஸ் கட்சி', 'A) காஞ்சிபுரம்', 'A) பெரியார்', 'A) 1949 அக்டோபர் 17', 'A)1944', 'A) பெரியார்', 'A)\tசோவியத் ரசியா', 'A)\tஅடிப்படை உரிமைகள்', 'A)\tசைமன் அறிக்கை', 'A)\tமோதிலால் நேரு', 'A)\t1934', 'A)\t1934', 'A)\tபிரிட்டிஷ் அதிகாரிகளால் நிர்வகிக்கப்பட்ட இந்தியர்களை கொண்டு', 'A)\t1934', 'A)\t1940', 'A)\tமவுண்ட்பேட்டன்', 'A)\t1940', 'A)\tஇந்தியர்களை இரண்டாம் உலகப்போரில் ஈடுபடுத்துவது', 'A)\t1944', 'A)\t1940', 'A)\tகிரிப்ஸ் குழு', 'A)\tடிசம்பர் 1949', 'A)\t189', 'A)\t199', 'A)\tநேரடித் தேர்தல் முறை', 'A)\tமுஸ்லிம்கள் சீக்கியர்கள் மற்றும் பொதுப்பிரிவினர்', 'A)\t208,73', 'A)\t10', 'A)\tடிசம்பர் 9 1946', 'A)\tசத்தியந்திர பிரசாத் சின்ஹா', 'A)\tசத்தியேந்திர பிரசாத் சின்ஹா', 'A)\tமுஸ்லிம் லீக்', 'A)\tராஜேந்திர பிரசாத்', 'A)\tடிசம்பர் 15 1946', 'A)\tஜனவரி 22 1947', 'A)\tநேரு', 'A)\tஆகஸ்ட் 29 1947', 'A)\tபி என் ராவ்', 'A)\tவி டி கிருஷ்ணமாச்சாரி', 'A)\tஅசோக சக்கரம்', 'A)\t13', 'A)\tஜூலை 3 1947', 'A)\t299', 'A)\tஜூலை 22 1947', 'A)\tஜூலை 22 1947', 'A)\tஆனந்த யாழ்', 'A)\tநவம்பர் 26 1949', 'A)\tநவம்பர் 26 1949', 'A)\t1929', 'A)\t19', 'A)\t7653', 'A)\tஎச் வி ஆர் ஐயங்கார்', 'A)\tபிரேம் பிகாரி நாராயண்', 'A)\tசர்ச்சில்', 'A)\tசர்ச்சில்', 'A)\tஇரண்டு வருடம் 11 மாதம் 17 நாள்', 'A)\tஅலெக்சாண்டர்', 'A)\tமதசார்பற்ற தன்மை', 'A)\tபிரிட்டன் மகாசாசனம்', 'A)\t5', 'A)\tபகுதி 1', 'A)\t12', 'A)\tதாழ்த்துதல் கூடாது', 'A)\tமதம்', 'A)\t12', 'A)\tஉயர் நீதிமன்றம்', 'A)\t5', 'A)\tபிரிவு 25', 'A)\t20', 'A)\t6', 'A)\t80', 'A)\t17', 'A)\t14', 'A)\t30', 'A)\tபொறுமையை வெல்லும்', 'A)\tஒரிசா', 'A)\tசென்னிமலை', 'A)\tசெம்மறியாடு', 'A)\tபிங்கலி வெங்கையா', 'A)\tவைரஸ்', 'A)\t2001', 'A)        ரஷ்யா ', 'A)        USA', 'A)        SBIன் முன்னாள்CMD', 'A)        இந்திய ராணுவம் ', 'A)        சீயோன் ', 'A)        இலங்கை ', 'A)        போலந்து ', 'A)        ஜெகதீஸ் சந்திரபோஸ் ', 'A)        UK', 'A)        பிப்ரவரி ', 'A)        புதிய ஜல்பைகுறி ', 'A)        தெலுங்கானா ', 'A)        வேளாண் அமைச்சகம் ', 'A)        இலங்கை ', 'A)        ஐக்கிய அமெரிக்க நாடுகள் ', 'A)        IITமெட்ராஸ் ', 'A)        ஆத்மநிற்பார்தா', 'A)        பன்னாட்டுச் செலாவணி நிதியம்', 'A)        2.0 முதல் – 6.0 % வரை', 'A)        மாணவர்களிடையே புத்தகங்களை ஊக்குவித்தல்', 'A)        1/100', 'A)        231', 'A)        2√2', 'A)        0', 'A)        1: √2  : 2', 'A)        1/7', 'A)        2.1', 'A)        4/13', 'A)        4', 'A)        29/19', 'A)        120', 'A)        11/12', 'A)        11/10', 'A)        0.05', 'A)        45^2', 'A)        3v4', 'A)        1/16', 'A)        5/4', 'A)        17 X^6 Y^3 Z^7', 'A)        3/5', 'A)        0.154', 'A)        33/104', 'A)        4', 'A)        108', 'A)        -1', 'A)        2', 'A)        3+V15', 'A)        X=13', 'A)        1/16', 'A)        X=0']

b = ['B) காங்கிரஸ் கட்சி', 'B) 1912 நவம்பர்', 'B) டாக்டர் டி எம் நாயர்', 'B)1912', 'B) நாயர் மற்றும் ராமராய', 'B) விடுதலை',
     'B) விடுதலை', 'B)1920', 'B)73', 'B) டி எம் நாயர்', 'B)1934', 'B)17', 'B)1922,1923', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)1929', 'B)152', 'B)38', 'B) 1937 ஜூன்', 'B) தியாகராய செட்டி', 'B) சேலம்', 'B) வள்ளலார்', 'B)1821-1872', 'B) வடலூர்', 'B) வடலூர்', 'B) துயரப்படும் உயிரினங்களை பார்த்து இறக்கம் கொள்ளாதவர்கள் கல்நெஞ்ச காரர்கள் அவர்களின் செல்வம் மேகங்களால் மூடப்பட்டிருக்கும் எனும் கருத்தை முன்வைத்தவர்', 'B)1867', 'B) சமரச சன்மார்க்க சத்திய சங்கம்', 'B) சீவகாருணிய சபை', 'B) திருவருட்பா', 'B)1877', 'B) வல் பருப்பா', 'B) எம் சி ராஜா', 'B) 1810-1852', 'B) திருவண்ணாமலைக்கு அருகில் இன்று சாமித்தோப்பு என்றழைக்கப்படும் சாஸ்தா கோயில் விலை எனும் கிராமத்தில் பிறந்தார்', 'B) மராத்தியர்கள்', 'B) வைகுண்டர் என தன்னை அழைத்துக் கொண்ட அவர் பெயருக்கு ஏற்றார் போல் வழிபாட்டின் போது தேவையற்ற சடங்கு சம்பிரதாயங்களை பின்பற்றினார்', 'B) விஷ்ணு', 'B) கூற்றும் காரணமும் சரி காரணம் சரியான விளக்கம் அல்ல', 'B) ஒடுக்கப்பட்ட மக்கள் தங்கள் தெய்வங்களுக்கு என கோவில்களை பெற்றிருக்கவில்லை. தங்கள் தெய்வங்களை மேன்மை படுத்தும் பொருட்டு களிமண்ணால் அல்லது செங்கல்லால் சிறிய பிரமிடுகளை கட்டி அவற்றுக்கு சாந்து பூசி வெள்ளையடித்து வைத்திருந்தனர்', 'B) சமரச சமாஜம்', 'B) சாமி', 'B) தேன் திரட்டு', 'B) உத்தராடம்', 'B) வெயில் தாங்கல்', 'B) ஆறுமுக நாவலர்', 'B) பத்திரிக்கையாளர்', 'B)1843-1914', 'B) கோயம்பத்தூர்', 'B) பிராகிருதம்', 'B) மூக நீதிக்காக இயக்கம் நடத்திய அவர் சாதியத்தின் கொடியை பிடியிலிருந்து ஒடுக்கப்பட்டோர் விடுதலை பெற பாடுபட்டார்', 'B) திராவிடர் கழகம்', 'B) அயோத்திதாசர்', 'B)1883', 'B)1882', 'B) கோவை', 'B) தமிழக இந்தியன்', 'B)1898', 'B) சாக்கிய பௌத்த விகாரம்', 'B) கோவை', 'B) 1879 செப்டம்பர் 17', 'B) பச்சையப்பன் கல்லூரி', 'B) சுயராஜ்ஜிய கட்சி', 'B) சேலம்', 'B) அண்ணா', 'B) 1949 ஆகஸ்ட் 17', 'B)1947', 'B) அண்ணா', 'B)\tஅமெரிக்க ஐக்கிய நாடுகள்', 'B)\tஅடிப்படை கடமைகள்', 'B)\tஆகஸ்ட் சலுகை', 'B)\tஎம் என் ராய்', 'B)\t1935', 'B)\t1935', 'B)\tநேரடித் தேர்தல் மூலம் தேர்ந்தெடுக்கப்பட்ட நிர்வாகிகளை கொண்டு', 'B)\t1935', 'B)\t1943', 'B)\tகானிங் ', 'B)\t1941', 'B)\tகாங்கிரசின் நன்மதிப்பை பெறுவது', 'B)\t1945', 'B)\t1941', 'B)\tசைமன் குழு', 'B)\tநவம்பர் 1946', 'B)\t289', 'B)\t99', 'B)\tஒற்றை மாற்று வாக்கு முறை', 'B)\tகிறிஸ்தவர்கள் முஸ்லிம்கள் மற்றும் பொதுப்பிரிவினர்', 'B)\t210,93', 'B)\t12', 'B)\tடிசம்பர் 10 1947', 'B)\tசச்சிதானந்த சின்ஹா', 'B)\tசச்சிதானந்த சின்கா', 'B)\tஇந்து மகாசபை', 'B)\tமோத்திலால் நேரு', 'B)\tடிசம்பர் 10 1945', 'B)\tஜனவரி 21   1947', 'B)\tகாந்தி', 'B)\tஆகஸ்ட் 31 1947', 'B)\tS.n. முகர்ஜி', 'B)\tடி டி கிருஷ்ணமாச்சாரி', 'B)\tமூவர்ணக் கொடி', 'B)\t12', 'B)\tஜூன் 3 1947', 'B)\t298', 'B)\tஜனவரி 24 1950', 'B)\tஜனவரி 24 1950', 'B)\tஆனந்த மடம்', 'B)\tஜனவரி 24 1950', 'B)\tஜனவரி 24 1950', 'B)\t1930', 'B)\t202', 'B)\t3473', 'B)\tஎஸ்என் முகர்ஜி', 'B)\tவசந்த் கிருஷ்ணன் வைத்தியா', 'B)\tசைமன்', 'B)\tசைமன்', 'B)\tஇரண்டு வருடம் பதினோரு மாதம் 16 நாள்', 'B)\tலாரன்ஸ்', 'B)\tஅடிப்படை உரிமைகள்', 'B)\tஅமெரிக்க பில் ஆஃ ரைட்ஸ்', 'B)\t6', 'B)\tபகுதி 2', 'B)\t13', 'B)\tசம வேலைவாய்ப்பு', 'B)\tஇனம்', 'B)\t13', 'B)\tஉச்சநீதிமன்றம்', 'B)\t6', 'B)\tபிரிவு 26', 'B)\t21', 'B)\t10', 'B)\t91', 'B)\t18', 'B)\t15', 'B)\t31', 'B)\tவாய்மையே வெல்லும்', 'B)\tவங்காளம்', 'B)\tகொல்லிமலை', 'B)\tவரையாடு', 'B)\tஅர்பிதா பேகம்', 'B)\tபூஞ்சை', 'B)\t2004', 'B)        ஐக்கிய அமெரிக்க நாடுகள் ', 'B)        UK', 'B)        ரிசர்வ் வங்கியின் முன்னாள் துணை ஆளுநர் ', 'B)        இந்திய கடற்படை', 'B)        சென்னை ', 'B)        வங்காளதேசம் ', 'B)        நார்வே ', 'B)        ஏபிஜே அப்துல் கலாம் ', 'B)        இந்தியா ', 'B)        மார்ச் ', 'B)        வாரணாசி ', 'B)        மகாராஷ்டிரா ', 'B)        பாதுகாப்பு அமைச்சகம் ', 'B)        வங்காளதேசம் ', 'B)        சீனா ', 'B)        IIScபெங்களூரு ', 'B)        நாரி சக்தி ', 'B)        UNESCAP', 'B)        1.5 முதல் – 5.5 % வரை', 'B)        அறிவியல் சார்ந்த தொழில் நிறுவனங்களை ஊக்குவித்தல்', 'B)        1/25', 'B)        213', 'B)        5√2', 'B)        6', 'B)        1: 2: 3', 'B)        3/7', 'B)        1.2', 'B)        7/4', 'B)        24.25', 'B)        10/19', 'B)        1.20', 'B)        17/18', 'B)        10/11', 'B)        0.25', 'B)        49^2', 'B)        3√8', 'B)        16', 'B)        4', 'B)        17 X^4 Y^3 Z^7', 'B)        2/5', 'B)        0.164', 'B)        66/104', 'B)        1', 'B)        324', 'B)        1', 'B)        1/2', 'B)        4+V15', 'B)        X=10', 'B)        1/8', 'B)        X=1']

c = ['C) சுயராஜ்ய கட்சி', 'C) 1920 டிசம்பர்', 'C) பி ராமராய  நிங்கர்', 'C)1920', 'C) நடேச முதலியார்', 'C) ஜஸ்டிஸ்',
     'C) ஜஸ்டிஸ்', 'C)1921', 'C)53', 'C) சுப்புராயலு', 'C)1932', 'C)15', 'C)1931,1932', 'C)1921', 'C)1921', 'C)1921', 'C)1921', 'C)1921', 'C)1921', 'C)1934', 'C)1934', 'C)1935', 'C)1935', 'C)46', 'C)16', 'C)1937 ஆகஸ்ட்', 'C) சுப்புராயலு', 'C) தஞ்சாவூர்', 'C) அருட்பெருஞ்ஜோதி', 'C)1822-1873', 'C) புவனகிரி', 'C) காஞ்சிபுரம்', 'C) தன்னுடைய அன்பையும் இரக்கத்தையும் செடிகொடிகள் உட்பட அனைத்து உயிரினங்கள் இடமும் காட்டினார் . இதை அவர் ஜீவகாருண்யம் என்றார்', 'C)1856', 'C) சமரச சுத்த சன்மார்க்க சங்கம்', 'C) தியான சபை', 'C) அருட்பா', 'C)1867', 'C) பருப்பா', 'C) வைகுண்ட சுவாமிகள்', 'C) 1811-1853', 'C) முடிசூடும் பெருமாள் என்று இவரின் பெயருக்கு உயர் ஜாதி இந்துக்கள் எதிர்ப்பு தெரிவித்ததால் அவரின் பெற்றோர் அவருடைய பெயரை முத்துக்குட்டி என மாற்றினார்', 'C) சரபோஜி', 'C) நடைமுறையிலுள்ள சமயநெறி முறைகளுக்கு எதிரான அவருடைய போதனைகள் ஒடுக்கப்பட்ட மக்களின் நடவடிக்கைகளில் பெரும் மாற்றத்தை ஏற்படுத்தியது', 'C) சிவன்', 'C) கூற்று  சரி காரணம் தவறு', 'C) அவ் வடிவங்களை வழிபடுவது அநாகரிகமான பழக்கம் என வைகுண்டர் கருதினார். விலங்குகளை வணங்குவதையும் அவர் நிராகரித்தார்', 'C) திராவிட சமாஜம்', 'C) ஐயா', 'C) அகிலத்திரட்டு', 'C) பல கடவுள்', 'C) மழை தாங்கல்', 'C) வள்ளலார்', 'C) சமூக அரசியல் செயல்பாட்டாளர்', 'C)1845-1915', 'C) காஞ்சிபுரம்', 'C) பாலி', 'C) கல்வியை வலிமை பெறுவதற்கான கருவியாக கருதிய அவர் தமிழகத்தின் ஒடுக்கப்பட்டோருக்கான பல பள்ளிகள் உருவாக்கப்படுவதற்கு உந்து சக்தியை திகழ்ந்தார்', 'C) அத்வைதாநந்தா சபா', 'C) ஜான் திரவியம்', 'C)1884', 'C)1887', 'C) தர்மபுரி', 'C) ஒரு பைசா தமிழன்', 'C)1888', 'C) சாக்கிய விடுதலை சங்கம்', 'C) சென்னை', 'C) 1903 ஜூலை 15', 'C) அண்ணா பல்கலைக்கழகம்', 'C) நீதிக்கட்சி', 'C) தஞ்சாவூர்', 'C) காமராஜர்', 'C) 1949 செப்டம்பர் 17', 'C)1949', 'C) காமராஜர்', 'C)\tஇந்தியா', 'C)\tஅறநெறி கொள்கை', 'C)\tமவுண்ட்பேட்டன் அறிக்கை', 'C)\tசுபாஷ் சந்திர போஸ்', 'C)\t1936', 'C)\t1936', 'C)\tசட்டமன்ற உறுப்பினர்களை கொண்டு', 'C)\t1936', 'C)\t1942', 'C)\tராஜாஜி', 'C)\t1942', 'C)\tமுஸ்லிம் லீக்கின் நிர்வாகிகளை கவுன்சிலில் இணைப்பது', 'C)\t1966', 'C)\t1944', 'C)\tஹண்டர் குழு', 'C)\tஜனவரி 1947', 'C)\t389', 'C)\t73', 'C)\tஆங்கில நிர்வாகிகளால் தேர்ந்தெடுக்கப்பட்டது', 'C)\tசீக்கியர்கள் கிறிஸ்தவர்கள் மற்றும் பொதுப்பிரிவினர்', 'C)\t230,21', 'C)\t20', 'C)\tடிசம்பர் 11 1946', 'C)\tநேரு', 'C)\tநேரு', 'C)\tகாங்கிரஸ்', 'C)\tஜவஹர்லால் நேரு', 'C)\tடிசம்பர் 10 1946', 'C)\tஜனவரி 26 1950', 'C)\tஜின்னா', 'C)\tஆகஸ்ட் 30 1947', 'C)\tடாக்டர் அம்பேத்கர்', 'C)\tமாதவராவ்', 'C)\tயானை', 'C)\t8', 'C)\tஏப்ரல் 28 1947', 'C)\t389', 'C)\tமார்ச் 1949', 'C)\tமே 1949', 'C)\tதேவி சவுதுரணி', 'C)\tநவம்பர் 24 1949', 'C)\tஜனவரி 26 1950', 'C)\t1940', 'C)\t23', 'C)\t2473', 'C)\tபி என் ராவ்', 'C)\tராம் மனோகர்', 'C)\tகிரான்வில் ஆஸ்டின்', 'C)\tஆஸ்டின்', 'C)\tஇரண்டு வருடம் 11 மாதம் 18 நாள்', 'C)\tகிரிப்ஸ்', 'C)\tஅடிப்படை கடமைகள்', 'C)\tகனடாவின் கூட்டாட்சி', 'C)\t8', 'C)\tபகுதி 3', 'C)\t14', 'C)\tதீண்டாமை ஒழிப்பு', 'C)\tமொழி', 'C)\t14', 'C)\tநடுவன் அரசு', 'C)\t7', 'C)\tபிரிவு 27', 'C)\t21A', 'C)\t14', 'C)\t87', 'C)\t19', 'C)\t16', 'C)\t32', 'C)\tஅரசு முதன்மை', 'C)\tதமிழகம்', 'C)\tதிருப்பூர்', 'C)\tவெள்ளாடு', 'C)\tஉதயகுமார்', 'C)\tபாக்டீரியா', 'C)\t2007', 'C)        சீனா ', 'C)        தைவான் ', 'C)        முன்னாள் தலைமை விஜிலென்ஸ் ஆணையர் ', 'C)        இந்தோ திபெத் எல்லைக் காவல்படை ', 'C)        பெய்ஜிங் ', 'C)        நேபாளம் ', 'C)        பிரான்ஸ் ', 'C)        அஜ்மல்கான் ', 'C)        இலங்கை ', 'C)        டிசம்பர் ', 'C)        ஜெய்ப்பூர் ', 'C)        கர்நாடகா ', 'C)        உள்துறை அமைச்சகம் ', 'C)        நேபாளம் ', 'C)        ரஷ்யா ', 'C)        IIM ஜம்மு ', 'C)        ஆதார் ', 'C)        உலக வங்கி ', 'C)        2.5 முதல் – 6.5 % வரை', 'C)        பள்ளிகளில் AI & ML ஐ ஊக்குவித்தல்', 'C)        1/50', 'C)        123', 'C)        2√5', 'C)        3', 'C)        √2: 2: 3', 'C)        1', 'C)        2.5', 'C)        12/6', 'C)        23.75', 'C)        19/29', 'C)        12', 'C)        13/16', 'C)        9/10', 'C)        0.5', 'C)        43^2', 'C)        3√6', 'C)        -1/16', 'C)        4/5', 'C)        17 X^6 Y^2Z^7', 'C)        5/3', 'C)        0.176', 'C)        99/104', 'C)        2', 'C)        2916', 'C)        2/7', 'C)        3', 'C)        2+V12', 'C)        X=9', 'C)        1/4', 'C)        X=2']

d = ['D) பார்வர்ட் பிளாக் கட்சி', 'D) 1924 டிசம்பர்', 'D) நடேச முதலியார்', 'D)1924', 'D) அனைவரும்', 'D) திராவிடன்',
     'D) திராவிடன்', 'D)1924', 'D)95', 'D) நடேச முதலியார்', 'D)1920', 'D)11', 'D)1932,1933', 'D)1922', 'D)1922', 'D)1922', 'D)1926', 'D)1922', 'D)1922', 'D)1937', 'D)1937', 'D)1937', 'D)1937', 'D)26', 'D)26', 'D)1937 செப்டம்பர்', 'D) நடேச முதலியார்', 'D) ஈரோடு', 'D) தனிப்பெரும் கருணை', 'D)1823-1874', 'D) பரங்கிப்பேட்டை', 'D) சென்னை', 'D) 1866 இல் தென்னிந்தியாவில் ஏற்பட்ட கொடிய பஞ்சத்தைப் கணக்கில்கொண்டு 1867ல் சாதிய எல்லைகளைத் தாண்டி அனைத்து மக்களுக்குமான இலவச உணவகத்தை மருதூரில் நிறுவினார்', 'D)1857', 'D) சமரச வேத சன்மார்க்க சத்திய சங்கம்', 'D) ஜீவகாருண்ய சேவா சபை', 'D) மறு பருப்பா', 'D)1857', 'D) ஏதுமில்லை', 'D) ராமலிங்க ஸ்வாமிகள்', 'D) 1812-1854', 'D) திருவிதாங்கூர் அரசில் உயர் ஜாதியினரின் கடுமையான எதிர்ப்புகள் இடையே அனைவரும் சமம் எனும் கருத்தினை போதித்தார்', 'D) திருவிதாங்கூர் அரசர்', 'D) 1836 ஆம் ஆண்டு சாதி வேற்றுமைகளை ஒழிப்பதற்கும் சமூக ஒருங்கிணைப்பு காக்கவும் தனது தியானத்தை துவக்கினார்.', 'D) கிருஷ்ணன்', 'D) கூற்று தவறு காரணம் சரி', 'D) ஆயினும் வழிபாட்டின் போது மக்கள் ஆடுகள் சேவல்கள் கோழிகள் ஆகியவற்றை பலி கொடுக்கும் சமய  சடங்குகளை அவர் ஆதரித்தார்', 'D) சமத்துவ சமாஜம்', 'D) அம்மா', 'D) வைகுண்டர் திரட்டு', 'D) ஏதுமில்லை', 'D) நிழல் தாங்கல்', 'D) வைகுண்ட சுவாமிகள்', 'D) காந்தியவாதி', 'D)1845-1914', 'D) சென்னை', 'D) சமஸ்கிருதம்', 'D) ஏதுமில்லை', 'D) திராவிட மகாஜன சபை', 'D) B and C', 'D)1885', 'D)1891', 'D) நீலகிரி', 'D) ஒரு பைசா இந்தியன்', 'D)1868', 'D) ஐக்கிய விடுதலைக் கழகம்', 'D) திருவள்ளூர்', 'D) 1878 டிசம்பர் 10', 'D) பாரதியார் பல்கலைக்கழகம்', 'D) திராவிட கழகம்', 'D) சென்னை', 'D) ராஜாஜி', 'D) 1949 ஜூன் 17', 'D)1967', 'D) ராஜாஜி', 'D)\tபிரிட்டன்', 'D)\tஅரசியலமைப்பு', 'D)\tநேரு அறிக்கை', 'D)\tகாந்தி', 'D)\t1937', 'D)\t1937', 'D)\tகாங்கிரஸ் உறுப்பினர்களை கொண்டு', 'D)\t1938', 'D)\t1950', 'D)\tலின்லித்கொவ்', 'D)\t1943', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\t1967', 'D)\t1955', 'D)\tஅமைச்சரவைத் தூதுக்குழு', 'D)\tஏப்ரல் 1948', 'D)\t299', 'D)\t93', 'D)\tநிர்ணயசபை உறுப்பினர்கள் அனைவருமே சுதேச அரசுகளால் தேர்ந்தெடுக்கப்பட்டனர்', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\t208,15', 'D)\t15', 'D)\tடிசம்பர் 9 1947', 'D)\tராஜேந்திர பிரசாத்', 'D)\tராஜேந்திர பிரசாத்', 'D)\tகம்யூனிஸ்ட் கட்சி', 'D)\tஅம்பேத்கர்', 'D)\tடிசம்பர் 13 1946', 'D)\tஏதுமில்லை', 'D)\tபடேல்', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\tஅல்லடி கிருஷ்ணசாமி ஐயர்', 'D)\tஇவர்களில் யாரும் இல்லை', 'D)\tசிங்கம்', 'D)\t10', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\t296', 'D)\tஇவற்றில் ஏதுமில்லை', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tஜனவரி 24 1949', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t1932', 'D)\t11', 'D)\t2227', 'D)\tராம் மனோகர் சிம்ஹா', 'D)\tஇவர்களில் யாரும் இல்லை', 'D)\tநசிருதீன் அஹமது', 'D)\tஅகமது', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tவேவல்', 'D)\tசாசனத்தின் நெகிழும் தன்மை', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t7', 'D)\tபகுதி 4', 'D)\t15', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\tபிறப்பிடம்', 'D)\t15', 'D)\tஇவற்றுள் ஏதுமில்லை', 'D)\t8', 'D)\tபிரிவு 78', 'D)\t22', 'D)\t15', 'D)\t86', 'D)\t20', 'D)\t17', 'D)\t35', 'D)\tமக்களே முதன்மை', 'D)\tஆந்திரா', 'D)\tவடலூர்', 'D)\tமலை ஆடு', 'D)\tஇவர்களுள் யாருமில்லை', 'D)\tஏதுமில்லை', 'D)\t2010', 'D)        இங்கிலாந்து', 'D)        ரஷ்யா', 'D)        உச்ச நீதிமன்றத்தின் முன்னாள் தலைமை நீதிபதி', 'D)        இந்திய கடலோர காவல்படை', 'D)        புது தில்லி', 'D)        மியான்மர்', 'D)        ஜிம்பாவே', 'D)        சி வி ராமன்', 'D)        வங்காளதேசம்', 'D)        ஜனவரி', 'D)        திருச்சிராப்பள்ளி', 'D)        ஹிமாச்சல் பிரதேசம்', 'D)        வெளியுறவு அமைச்சகம்', 'D)        மியான்மர்', 'D)        பிரான்ஸ்', 'D)        IIMஅகமதாபாத்', 'D)        சம்விதான்', 'D)        ஆசிய வளர்ச்சி வங்கி', 'D)        3.0 முதல் – 7.0 % வரை', 'D)        மாணவர் தொழில் முனைவோருக்கு ஆதரவளித்தல்', 'D)        100', 'D)        132', 'D)        5√5', 'D)        4', 'D)        1: 2: 2√2', 'D)        8/7', 'D)        1.6', 'D)        1', 'D)        30', 'D)        10/9', 'D)        0.12', 'D)        9/10', 'D)        12/11', 'D)        2.5', 'D)        42^2', 'D)        3√2', 'D)        -16', 'D)        5', 'D)        17 X^4 Y^3 Z^2', 'D)        5/2', 'D)        0.168', 'D)        1', 'D)        5', 'D)        4800', 'D)        1   1/18', 'D)        1', 'D)        4+V12', 'D)        X=7', 'D)        3/2', 'D)        X=3']

correct_answer = ['A) சென்னை ஐக்கிய கழகம்', 'B) 1912 நவம்பர்', 'D) நடேச முதலியார்', 'A)1916', 'D) அனைவரும்', 'C) ஜஸ்டிஸ்',
                  'D) திராவிடன்', 'B)1920', 'A)63', 'C) சுப்புராயலு', 'B)1934', 'A)13', 'A)1921,1922', 'A)1924', 'B)1929', 'C)1921', 'D)1926', 'C)1921', 'D)1922', 'A)1926\n', 'B)1929', 'D)1937', 'C)1935', 'B)152', 'D)26', 'A) 1937 ஜூலை', 'C) சுப்புராயலு', 'B) சேலம்', 'B) வள்ளலார்', 'D)1823-1874', 'A) மருதூர்', 'D) சென்னை', 'C) தன்னுடைய அன்பையும் இரக்கத்தையும் செடிகொடிகள் உட்பட அனைத்து உயிரினங்கள் இடமும் காட்டினார் . இதை அவர் ஜீவகாருண்யம் என்றார்', 'C)1856', 'A) சமரச சுத்த சன்மார்க்க சத்திய சங்கம்', 'A) சத்திய ஞான சபை', 'B) திருவருட்பா', 'C)1867', 'A) மருட்பா', 'C) வைகுண்ட சுவாமிகள்', 'A) 1809-1851', 'B) திருவண்ணாமலைக்கு அருகில் இன்று சாமித்தோப்பு என்றழைக்கப்படும் சாஸ்தா கோயில் விலை எனும் கிராமத்தில் பிறந்தார்', 'D) திருவிதாங்கூர் அரசர்', 'C) நடைமுறையிலுள்ள சமயநெறி முறைகளுக்கு எதிரான அவருடைய போதனைகள் ஒடுக்கப்பட்ட மக்களின் நடவடிக்கைகளில் பெரும் மாற்றத்தை ஏற்படுத்தியது', 'B) விஷ்ணு', 'D) கூற்று தவறு காரணம் சரி', 'D) ஆயினும் வழிபாட்டின் போது மக்கள் ஆடுகள் சேவல்கள் கோழிகள் ஆகியவற்றை பலி கொடுக்கும் சமய  சடங்குகளை அவர் ஆதரித்தார்', 'D) சமத்துவ சமாஜம்', 'C) ஐயா', 'C) அகிலத்திரட்டு', 'A) பூடம்', 'D) நிழல் தாங்கல்', 'A) அயோத்திதாச பண்டிதர்', 'D) காந்தியவாதி', 'D)1845-1914', 'D) சென்னை', 'B) பிராகிருதம்', 'D) ஏதுமில்லை', 'C) அத்வைதாநந்தா சபா', 'D) B and C', 'D)1885', 'D)1891', 'D) நீலகிரி', 'C) ஒரு பைசா தமிழன்', 'B)1898', 'A) சாக்கிய பௌத்த சங்கம்', 'C) சென்னை', 'A) 1909 செப்டம்பர் 15', 'B) பச்சையப்பன் கல்லூரி', 'C) நீதிக்கட்சி', 'A) காஞ்சிபுரம்', 'B) அண்ணா', 'C) 1949 செப்டம்பர் 17', 'D)1967', 'B) அண்ணா', 'B)\tஅமெரிக்க ஐக்கிய நாடுகள்', 'D)\tஅரசியலமைப்பு', 'D)\tநேரு அறிக்கை', 'B)\tஎம் என் ராய்', 'A)\t1934', 'B)\t1935', 'B)\tநேரடித் தேர்தல் மூலம் தேர்ந்தெடுக்கப்பட்ட நிர்வாகிகளை கொண்டு', 'D)\t1938', 'A)\t1940', 'D)\tலின்லித்கொவ்', 'C)\t1942', 'A)\tஇந்தியர்களை இரண்டாம் உலகப்போரில் ஈடுபடுத்துவது', 'B)\t1945', 'C)\t1944', 'D)\tஅமைச்சரவைத் தூதுக்குழு', 'B)\tநவம்பர் 1946', 'C)\t389', 'D)\t93', 'B)\tஒற்றை மாற்று வாக்கு முறை', 'A)\tமுஸ்லிம்கள் சீக்கியர்கள் மற்றும் பொதுப்பிரிவினர்', 'A)\t208,73', 'D)\t15', 'A)\tடிசம்பர் 9 1946', 'B)\tசச்சிதானந்த சின்ஹா', 'D)\tராஜேந்திர பிரசாத்', 'A)\tமுஸ்லிம் லீக்', 'C)\tஜவஹர்லால் நேரு', 'D)\tடிசம்பர் 13 1946', 'A)\tஜனவரி 22 1947', 'D)\tபடேல்', 'C)\tஆகஸ்ட் 30 1947', 'C)\tடாக்டர் அம்பேத்கர்', 'B)\tடி டி கிருஷ்ணமாச்சாரி', 'C)\tயானை', 'C)\t8', 'B)\tஜூன் 3 1947', 'A)\t299', 'D)\tஇவற்றில் ஏதுமில்லை', 'A)\tஜூலை 22 1947', 'B)\tஆனந்த மடம்', 'B)\tஜனவரி 24 1950', 'A)\tநவம்பர் 26 1949', 'A)\t1929', 'D)\t11', 'B)\t3473', 'B)\tஎஸ்என் முகர்ஜி', 'B)\tவசந்த் கிருஷ்ணன் வைத்தியா', 'D)\tநசிருதீன் அஹமது', 'B)\tசைமன்', 'C)\tஇரண்டு வருடம் 11 மாதம் 18 நாள்', 'D)\tவேவல்', 'D)\tசாசனத்தின் நெகிழும் தன்மை', 'B)\tஅமெரிக்க பில் ஆஃ ரைட்ஸ்', 'B)\t6', 'C)\tபகுதி 3', 'C)\t14', 'A)\tதாழ்த்துதல் கூடாது', 'C)\tமொழி', 'B)\t13', 'B)\tஉச்சநீதிமன்றம்', 'A)\t5', 'A)\tபிரிவு 25', 'A)\t20', 'C)\t14', 'D)\t86', 'D)\t20', 'D)\t17', 'C)\t32', 'B)\tவாய்மையே வெல்லும்', 'D)\tஆந்திரா', 'A)\tசென்னிமலை', 'B)\tவரையாடு', 'C)\tஉதயகுமார்', 'C)\tபாக்டீரியா', 'C)\t2007', 'B) ஐக்கிய அமெரிக்க நாடுகள்', 'B) UK', 'B) ரிசர்வ் வங்கியின் முன்னாள் துணை ஆளுநர்', 'C) இந்தோ திபெத் எல்லைக் காவல்படை', 'D) புது தில்லி', 'B) வங்காளதேசம்', 'B) நார்வே', 'C) அஜ்மல்கான்', 'D) வங்காளதேசம்', 'B) மார்ச்', 'A) புதிய ஜல்பைகுறி', 'C) கர்நாடகா', 'C) உள்துறை அமைச்சகம்', 'B) வங்காளதேசம்', 'A) ஐக்கிய அமெரிக்க நாடுகள்', 'C) IIM ஜம்மு', 'A) ஆத்மநிற்பார்தா', 'B) UNESCAP', 'A) 2.0 முதல் – 6.0 % வரை', 'B) அறிவியல் சார்ந்த தொழில் நிறுவனங்களை ஊக்குவித்தல்', 'C) 1/50', 'C) 123', 'B) 5√2', 'B) 6', 'A) 1: √2 : 2', 'C) 1', 'A) 2.1', 'A) 4/13', 'C) 23.75', 'A) 29/19', 'C) 12', 'B) 17/18', 'B) 10/11', 'C) 0.5', 'C) 43^2', 'D) 3√2', 'A) 1/16', 'C) 4/5', 'A) 17 X^6 Y^3 Z^7', 'C) 5/3', 'A) 0.154', 'C) 99/104', 'C) 2', 'B) 324', 'B) 1', 'D) 1', 'B) 4+V15', 'C) X=9', 'A) 1/16', 'B) X=1']


@app.route("/", methods=["GET", "POST"])
def home():
    warning = request.args.get("warn")

    if current_user.is_authenticated:
        completed = Test22.query.filter_by(examinee_id=current_user.user_id).first()

        if request.args.get("fee"):
            name = request.args.get("name")
            bending = request.args.get("bending")
            logged_in = request.args.get("logged_in")

            return render_template("index.html", fee=True, name=name, bending=bending, logged_in=logged_in,
                                   completed=completed)

        else:
            if completed:
                return render_template("index.html", warning=warning, completed=completed)

            else:
                return render_template("index.html", warning=warning)

    else:
        return render_template("index.html", warning=warning)


@app.route("/register", methods=['GET', 'POST'])
def register():
    form = RegisterForm()
    errors = []

    if form.validate_on_submit():
        hash_and_salted_password = generate_password_hash(
            request.form.get('password'),
            method='pbkdf2:sha256',
            salt_length=8
        )

        new_user = User(
            email=request.form.get('email'),
            username=request.form.get('name'),
            password=hash_and_salted_password,
        )

        if User.query.filter_by(email=request.form.get('email').lower()).first():
            return redirect(url_for('login', msg="You've already been registered. Please Login!"))

        elif User.query.filter_by(username=request.form.get('name')).first():
            errors.append('The username has already been taken')
            return render_template("register.html", errors=errors, form=form)

        else:
            errors.clear()

            if request.form.get('email') in verified_emails:

                db.session.add(new_user)
                db.session.commit()

                login_user(new_user)

                # redirect to the home page with fee details.
                return redirect(url_for('home', fee=True, name=student_mails[request.form.get('email')][0],
                                        bending=student_mails[request.form.get('email')][1]))

            else:
                return redirect(url_for('home', warn=True))

    return render_template("register.html", form=form)


@app.route("/login", methods=['GET', 'POST'])
def login():
    form = LoginForm()
    errors = []

    if form.validate_on_submit():
        email = request.form.get('email')
        password = request.form.get('password')

        # Find user by email entered.
        user = User.query.filter_by(email=email).first()

        if not user:
            errors.append("That email does not exist, please Register and then come back.")
            return render_template("login.html", errors=errors, form=form)

        # Check stored password hash against entered password hashed.
        if check_password_hash(user.password, password):
            login_user(user)
            errors.clear()

            # checking the user's payment details
            # redirect to the home page with fee details.
            return redirect(url_for('home', fee=True, name=student_mails[request.form.get('email')][0],
                                    bending=student_mails[request.form.get('email')][1]))

        else:
            errors.append('Incorrect Password! Try Again')
            return render_template("login.html", errors=errors, form=form)

    msg = request.args.get("msg")
    return render_template("login.html", form=form, errors=errors, msg=msg)


@app.route("/exam", methods=["GET", "POST"])
def exam():
    global attended
    test_no = request.args.get("test_no")
    opentime = exam_sites[test_no][0]
    closetime = exam_sites[test_no][1]

    # if test_no == "15":
    #     attended = Test15.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "16":
    #         attended = Test16.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "17":
    #         attended = Test17.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "18":
    #     attended = Test18.query.filter_by(examinee_id=current_user.user_id).first()

    if test_no == "19":
        attended = Test19.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "20":
        attended = Test20.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "21":
        attended = Test21.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "22":
        attended = Test22.query.filter_by(examinee_id=current_user.user_id).first()

    # else:
    #     return redirect(url_for("home", warn="Sorry the results are no longer available!"))

    if attended is None:
        return render_template("exam.html", opentime=json.dumps(opentime), closetime=json.dumps(closetime),
                               sl_no=sl_no, ques=ques, a=a, b=b, c=c, d=d, correct_answer=correct_answer,
                               answers=[], test_no=test_no)
    else:
        return redirect(url_for("home", warn="You have already committed this exam. Check the results instead."))


@app.route('/evaluate', methods=["GET", "POST"])
def evaluate():
    global new_examinee
    answers = []
    final_result = []
    marks = 0

    for i in range(0, len(sl_no)):
        user_answer = request.form[f'answers{i}']

        if user_answer is None:
            answers.append("None")

        else:
            answers.append(user_answer)

    for j in range(len(correct_answer)):

        if answers[j].strip() == correct_answer[j].strip():
            marks += 1
            final_result.append("Correct")

        else:
            final_result.append("Wrong")

    # return f"{final_result, answers, correct_answer}"

    st_answers = '#||#'.join(answers)
    f_result = "#||#".join(final_result)

    # return f"{correct_answer, answers}"
    # return f"{[s_answers for s_answers in correct_answer]}"
    # return f"{[s_answers for s_answers in answers]}"
    # return f"{final_result}"

    actual_time = datetime.datetime.now()
    s_time = actual_time.strftime('%Y-%m-%d %H:%M:%S.%f')

    new_examinee = Test22(
        test_author=current_user,
        user_answers=st_answers,
        marks=marks,
        final_result=f_result,
        date=s_time[:-7],
        examinee_name=current_user.username
    )

    db.session.add(new_examinee)
    db.session.commit()

    return redirect(url_for('home', warn="You have successfully completed the exam. Click results to see results."))


@app.route("/result", methods=["GET", "POST"])
def result():
    global answers, final_result, time, marks
    test_no = request.args.get("test_no")

    # if test_no == "15":
    #     attended_student = Test15.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "16":
    #     attended_student = Test16.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "17":
    #     attended_student = Test17.query.filter_by(examinee_id=current_user.user_id).first()
    #
    # elif test_no == "18":
    #     attended_student = Test18.query.filter_by(examinee_id=current_user.user_id).first()

    if test_no == "19":
        attended_student = Test19.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "20":
        attended_student = Test20.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "21":
        attended_student = Test21.query.filter_by(examinee_id=current_user.user_id).first()

    elif test_no == "22":
        attended_student = Test22.query.filter_by(examinee_id=current_user.user_id).first()

    else:
        return redirect(url_for('home', warn="You did not attend the Test that you had selected!"))

    answers = attended_student.user_answers.split('#||#')
    final_result = attended_student.final_result.split('#||#')
    marks = attended_student.marks
    time = attended_student.date

    return render_template("results.html", answers=answers, marks=marks, sl_no=sl_no, ques=ques, a=a, b=b, c=c, d=d,
                           correct_answer=correct_answer, final_result=final_result, time=time)


@app.route("/dashboard")
def dashboard():
    all_record = Test22.query.all()

    return render_template("dashboard.html", all_record=all_record)


@app.route("/change_details", methods=["GET", "POST"])
def change_password():
    form = ChangeDetails()
    errors = []

    if form.validate_on_submit():
        email = request.form.get('email')
        old_password = request.form.get('old_password')
        new_password = request.form.get('new_password')

        user = User.query.filter_by(email=email).first()

        if not user:
            errors.append("That email does not exist, please Register and then come back.")
            return render_template("login.html", errors=errors, form=form)

        # Check stored password hash against entered password hashed.
        if check_password_hash(user.password, old_password):

            if User.query.filter_by(email=email).first():
                old = User.query.filter_by(email=email).first()
                pass_to_update = User.query.get(old.user_id)

                hash_and_salted_password = generate_password_hash(
                    new_password,
                    method='pbkdf2:sha256',
                    salt_length=8
                )

                pass_to_update.password = hash_and_salted_password

                db.session.commit()

                logout_user()
                return redirect(url_for('login', msg="Your password has been changed successfully. "
                                                     "Please Login with your new password."))

        else:
            errors.append("Please check your password.")
            return render_template("change_details.html", form=form, errors=errors)

    return render_template("change_details.html", form=form, errors=errors)


@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('home'))


@app.route("/admission", methods=["GET", "POST"])
def new_admission():
    form = AdmissionForm()

    if form.validate_on_submit():
        new_member = Admission(
            name=form.name.data,
            mobile_number=form.number.data,
            email=form.email.data,
        )

        db.session.add(new_member)
        db.session.commit()

        verification_code = random.randint(2000, 10000)

        with smtplib.SMTP('smtp.gmail.com', 587) as connection:
            connection.starttls()
            connection.login(MY_EMAIL, MY_PASSWORD)
            connection.sendmail(from_addr=MY_EMAIL,
                                to_addrs=request.form.get('email'),
                                msg=f"Subject:WELCOME TO SENA CAREER INSTITUTE\n\nWelcome {request.form.get('name')}!"
                                    f" Happy to see you with us. Thanks for supporting us! Keep rocking! "
                                    f"Here is our Educators' number: 8610642720".encode('utf-8'))

        with smtplib.SMTP('smtp.gmail.com', 587) as connection:
            connection.starttls()
            connection.login(MY_EMAIL, MY_PASSWORD)
            connection.sendmail(from_addr=MY_EMAIL,
                                to_addrs=MY_EMAIL,
                                msg=f"Subject:NEW ADMISSION\n\n{request.form.get('name')} has made an "
                                    f"admission sign up on Sena site Here is details {request.form.get('name')},"
                                    f" {request.form.get('number')}, {request.form.get('email')}!")

        return redirect(url_for('home'))

    return render_template("register.html", form=form, admission=True)


if __name__ == '__main__':
    app.run(debug=True)
